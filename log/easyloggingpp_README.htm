<!DOCTYPE html>
<html class="" lang="en"><head prefix="og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# object: http://ogp.me/ns/object# article: http://ogp.me/ns/article# profile: http://ogp.me/ns/profile#">
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
    <meta charset="utf-8">
    

    <link crossorigin="anonymous" href="easyloggingpp_README_files/frameworks-298818692f75de57d67115ca5a0c1f983d1d5ad302774216c.css" media="all" rel="stylesheet">
    <link crossorigin="anonymous" href="easyloggingpp_README_files/github-cae7b69c3beb9caf8dfe63837d1393a71f688542faa228a395761.css" media="all" rel="stylesheet">
    
    
    <link crossorigin="anonymous" href="easyloggingpp_README_files/site-73b3dae8eb441c98982c7306f0e59decca409e87188e07bc1a961b8.css" media="all" rel="stylesheet">
    

    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta http-equiv="Content-Language" content="en">
    <meta name="viewport" content="width=device-width">
    
    <title>easyloggingpp/README.md at master · easylogging/easyloggingpp · GitHub</title>
    <link rel="search" type="application/opensearchdescription+xml" href="https://github.com/opensearch.xml" title="GitHub">
    <link rel="fluid-icon" href="https://github.com/fluidicon.png" title="GitHub">
    <link rel="apple-touch-icon" href="https://github.com/apple-touch-icon.png">
    <link rel="apple-touch-icon" sizes="57x57" href="https://github.com/apple-touch-icon-57x57.png">
    <link rel="apple-touch-icon" sizes="60x60" href="https://github.com/apple-touch-icon-60x60.png">
    <link rel="apple-touch-icon" sizes="72x72" href="https://github.com/apple-touch-icon-72x72.png">
    <link rel="apple-touch-icon" sizes="76x76" href="https://github.com/apple-touch-icon-76x76.png">
    <link rel="apple-touch-icon" sizes="114x114" href="https://github.com/apple-touch-icon-114x114.png">
    <link rel="apple-touch-icon" sizes="120x120" href="https://github.com/apple-touch-icon-120x120.png">
    <link rel="apple-touch-icon" sizes="144x144" href="https://github.com/apple-touch-icon-144x144.png">
    <link rel="apple-touch-icon" sizes="152x152" href="https://github.com/apple-touch-icon-152x152.png">
    <link rel="apple-touch-icon" sizes="180x180" href="https://github.com/apple-touch-icon-180x180.png">
    <meta property="fb:app_id" content="1401488693436528">

      <meta content="https://avatars0.githubusercontent.com/u/5101887?v=3&amp;s=400" name="twitter:image:src"><meta content="@github" name="twitter:site"><meta content="summary" name="twitter:card"><meta content="easylogging/easyloggingpp" name="twitter:title"><meta content="easyloggingpp - Single header C++ logging library. It is extremely light-weight, robust, fast performing, thread and type safe and consists of many built-in features. It provides ability to write l..." name="twitter:description">
      <meta content="https://avatars0.githubusercontent.com/u/5101887?v=3&amp;s=400" property="og:image"><meta content="GitHub" property="og:site_name"><meta content="object" property="og:type"><meta content="easylogging/easyloggingpp" property="og:title"><meta content="https://github.com/easylogging/easyloggingpp" property="og:url"><meta content="easyloggingpp - Single header C++ logging library. It is extremely light-weight, robust, fast performing, thread and type safe and consists of many built-in features. It provides ability to write l..." property="og:description">
      <meta name="browser-stats-url" content="https://api.github.com/_private/browser/stats">
    <meta name="browser-errors-url" content="https://api.github.com/_private/browser/errors">
    <link rel="assets" href="https://assets-cdn.github.com/">
    
    <meta name="pjax-timeout" content="1000">
    
    

    <meta name="msapplication-TileImage" content="/windows-tile.png">
    <meta name="msapplication-TileColor" content="#ffffff">
    

    <meta name="google-site-verification" content="KT5gs8h0wvaagLKAVWq8bbeNwnZZK1r1XQysX3xurLU">
<meta name="google-site-verification" content="ZzhVyEFwb7w3e0-uOTltm8Jsck2F5StVihD0exw2fsA">
    <meta name="google-analytics" content="UA-3769691-2">

<meta content="collector.githubapp.com" name="octolytics-host"><meta content="github" name="octolytics-app-id"><meta content="B891:2646:8ED3D5:EB4FE6:5889F2F7" name="octolytics-dimension-request_id">




  <meta class="js-ga-set" name="dimension1" content="Logged Out">



        <meta name="hostname" content="github.com">
    <meta name="user-login" content="">

        <meta name="expected-hostname" content="github.com">
      <meta name="js-proxy-site-detection-payload" content="YzJmMTYxODk2MDY2MDU5ODg3ZmY5YzYwYzZkODExMjQwOGE1YTU4NzI2NmJiMzdjODhkZWQ2MzY0ZjI0MzdjMXx7InJlbW90ZV9hZGRyZXNzIjoiMTU5LjI0NS4yMC4xMzAiLCJyZXF1ZXN0X2lkIjoiQjg5MToyNjQ2OjhFRDNENTpFQjRGRTY6NTg4OUYyRjciLCJ0aW1lc3RhbXAiOjE0ODU0MzU2NDAsImhvc3QiOiJnaXRodWIuY29tIn0=">


      <link rel="mask-icon" href="https://assets-cdn.github.com/pinned-octocat.svg" color="#000000">
      <link rel="icon" type="image/x-icon" href="https://assets-cdn.github.com/favicon.ico">

    <meta name="html-safe-nonce" content="e8674ecbc315e4b10dd1057959b280ead4058dcf">

    <meta http-equiv="x-pjax-version" content="23c233410c65b5e140c6bd7dc0bb13a2">
    

      
  <meta name="description" content="easyloggingpp - Single header C++ logging library. It is extremely light-weight, robust, fast performing, thread and type safe and consists of many built-in features. It provides ability to write logs in your own customized format. It also provide support for logging your classes, third-party libraries, STL and third-party containers etc.">
  <meta name="go-import" content="github.com/easylogging/easyloggingpp git https://github.com/easylogging/easyloggingpp.git">

  <meta content="5101887" name="octolytics-dimension-user_id"><meta content="easylogging" name="octolytics-dimension-user_login"><meta content="5919188" name="octolytics-dimension-repository_id"><meta content="easylogging/easyloggingpp" name="octolytics-dimension-repository_nwo"><meta content="true" name="octolytics-dimension-repository_public"><meta content="false" name="octolytics-dimension-repository_is_fork"><meta content="5919188" name="octolytics-dimension-repository_network_root_id"><meta content="easylogging/easyloggingpp" name="octolytics-dimension-repository_network_root_nwo">
  <link href="https://github.com/easylogging/easyloggingpp/commits/master.atom" rel="alternate" title="Recent Commits to easyloggingpp:master" type="application/atom+xml">


      
  <meta data-pjax-transient="true" name="selected-link" value="repo_source"><meta content="/&lt;user-name&gt;/&lt;repo-name&gt;/blob/show" data-pjax-transient="true" name="analytics-location"><meta name="request-id" content="EB6D:2648:99BA38:FD6C28:5889F34F" data-pjax-transient="true"><link rel="canonical" href="https://github.com/easylogging/easyloggingpp/blob/master/README.md" data-pjax-transient="true"><link data-pjax-transient="true" href="https://github.com/easylogging/easyloggingpp/commits/master.atom" rel="alternate" title="Recent Commits to easyloggingpp:master" type="application/atom+xml"></head>


  <body class="logged-out  env-production windows vis-public">
    <div id="js-pjax-loader-bar" class="pjax-loader-bar"><div style="width: 100%;" class="progress"></div></div>
    <a href="#start-of-content" tabindex="1" class="accessibility-aid js-skip-to-content">Skip to content</a>

    
    
    



          <header class="site-header js-details-container Details alt-body-font" role="banner">
  <div class="container-responsive">
    <a class="header-logo-invertocat" href="https://github.com/" aria-label="Homepage" data-ga-click="(Logged out) Header, go to homepage, icon:logo-wordmark">
      <svg aria-hidden="true" class="octicon octicon-mark-github" height="32" version="1.1" viewBox="0 0 16 16" width="32"><path fill-rule="evenodd" d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0 0 16 8c0-4.42-3.58-8-8-8z"></path></svg>
    </a>

    <button class="btn-link float-right site-header-toggle js-details-target" type="button" aria-label="Toggle navigation">
      <svg aria-hidden="true" class="octicon octicon-three-bars" height="24" version="1.1" viewBox="0 0 12 16" width="18"><path fill-rule="evenodd" d="M11.41 9H.59C0 9 0 8.59 0 8c0-.59 0-1 .59-1H11.4c.59 0 .59.41.59 1 0 .59 0 1-.59 1h.01zm0-4H.59C0 5 0 4.59 0 4c0-.59 0-1 .59-1H11.4c.59 0 .59.41.59 1 0 .59 0 1-.59 1h.01zM.59 11H11.4c.59 0 .59.41.59 1 0 .59 0 1-.59 1H.59C0 13 0 12.59 0 12c0-.59 0-1 .59-1z"></path></svg>
    </button>

    <div class="site-header-menu">
      <nav class="site-header-nav site-header-nav-main">
        <a href="https://github.com/personal" class="js-selected-navigation-item nav-item nav-item-personal" data-ga-click="Header, click, Nav menu - item:personal" data-selected-links="/personal /personal">
          Personal
</a>        <a href="https://github.com/open-source" class="js-selected-navigation-item nav-item nav-item-opensource" data-ga-click="Header, click, Nav menu - item:opensource" data-selected-links="/open-source /open-source">
          Open source
</a>        <a href="https://github.com/business" class="js-selected-navigation-item nav-item nav-item-business" data-ga-click="Header, click, Nav menu - item:business" data-selected-links="/business /business/partners /business/features /business/customers /business">
          Business
</a>        <a href="https://github.com/explore" class="js-selected-navigation-item nav-item nav-item-explore" data-ga-click="Header, click, Nav menu - item:explore" data-selected-links="/explore /trending /trending/developers /integrations /integrations/feature/code /integrations/feature/collaborate /integrations/feature/ship /showcases /explore">
          Explore
</a>      </nav>

      <div class="site-header-actions">
            <a class="btn btn-primary site-header-actions-btn" href="https://github.com/join?source=header-repo" data-ga-click="(Logged out) Header, clicked Sign up, text:sign-up">Sign up</a>
          <a class="btn site-header-actions-btn mr-1" href="https://github.com/login?return_to=%2Feasylogging%2Feasyloggingpp" data-ga-click="(Logged out) Header, clicked Sign in, text:sign-in">Sign in</a>
      </div>

        <nav class="site-header-nav site-header-nav-secondary mr-md-3">
          <a class="nav-item" href="https://github.com/pricing">Pricing</a>
          <a class="nav-item" href="https://github.com/blog">Blog</a>
          <a class="nav-item" href="https://help.github.com/">Support</a>
          <a class="nav-item header-search-link" href="https://github.com/search">Search GitHub</a>
              <div class="header-search scoped-search site-scoped-search js-site-search" role="search">
  <!-- '"` --><!-- </textarea></xmp> --><form accept-charset="UTF-8" action="/easylogging/easyloggingpp/search" class="js-site-search-form" data-scoped-search-url="/easylogging/easyloggingpp/search" data-unscoped-search-url="/search" method="get"><div style="margin:0;padding:0;display:inline"><input name="utf8" value="✓" type="hidden"></div>
    <label class="form-control header-search-wrapper js-chromeless-input-container">
      <div class="header-search-scope">This repository</div>
      <input class="form-control header-search-input js-site-search-focus js-site-search-field is-clearable" data-hotkey="s" name="q" placeholder="Search" aria-label="Search this repository" data-unscoped-placeholder="Search GitHub" data-scoped-placeholder="Search" autocapitalize="off" type="text">
    </label>
</form></div>

        </nav>
    </div>
  </div>
</header>



    <div id="start-of-content" class="accessibility-aid"></div>

      <div id="js-flash-container">
</div>


    <div role="main">
        <div itemscope="" itemtype="http://schema.org/SoftwareSourceCode">
    <div id="js-repo-pjax-container" data-pjax-container=""><div class="pagehead repohead instapaper_ignore readability-menu experiment-repo-nav">
  <div class="container repohead-details-container">

    

<ul class="pagehead-actions">

  <li>
      <a href="https://github.com/login?return_to=%2Feasylogging%2Feasyloggingpp" class="btn btn-sm btn-with-count tooltipped tooltipped-n" aria-label="You must be signed in to watch a repository" rel="nofollow">
    <svg aria-hidden="true" class="octicon octicon-eye" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M8.06 2C3 2 0 8 0 8s3 6 8.06 6C13 14 16 8 16 8s-3-6-7.94-6zM8 12c-2.2 0-4-1.78-4-4 0-2.2 1.8-4 4-4 2.22 0 4 1.8 4 4 0 2.22-1.78 4-4 4zm2-4c0 1.11-.89 2-2 2-1.11 0-2-.89-2-2 0-1.11.89-2 2-2 1.11 0 2 .89 2 2z"></path></svg>
    Watch
  </a>
  <a class="social-count" href="https://github.com/easylogging/easyloggingpp/watchers" aria-label="113 users are watching this repository">
    113
  </a>

  </li>

  <li>
      <a href="https://github.com/login?return_to=%2Feasylogging%2Feasyloggingpp" class="btn btn-sm btn-with-count tooltipped tooltipped-n" aria-label="You must be signed in to star a repository" rel="nofollow">
    <svg aria-hidden="true" class="octicon octicon-star" height="16" version="1.1" viewBox="0 0 14 16" width="14"><path fill-rule="evenodd" d="M14 6l-4.9-.64L7 1 4.9 5.36 0 6l3.6 3.26L2.67 14 7 11.67 11.33 14l-.93-4.74z"></path></svg>
    Star
  </a>

    <a class="social-count js-social-count" href="https://github.com/easylogging/easyloggingpp/stargazers" aria-label="1100 users starred this repository">
      1,100
    </a>

  </li>

  <li>
      <a href="https://github.com/login?return_to=%2Feasylogging%2Feasyloggingpp" class="btn btn-sm btn-with-count tooltipped tooltipped-n" aria-label="You must be signed in to fork a repository" rel="nofollow">
        <svg aria-hidden="true" class="octicon octicon-repo-forked" height="16" version="1.1" viewBox="0 0 10 16" width="10"><path fill-rule="evenodd" d="M8 1a1.993 1.993 0 0 0-1 3.72V6L5 8 3 6V4.72A1.993 1.993 0 0 0 2 1a1.993 1.993 0 0 0-1 3.72V6.5l3 3v1.78A1.993 1.993 0 0 0 5 15a1.993 1.993 0 0 0 1-3.72V9.5l3-3V4.72A1.993 1.993 0 0 0 8 1zM2 4.2C1.34 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zm3 10c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zm3-10c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z"></path></svg>
        Fork
      </a>

    <a href="https://github.com/easylogging/easyloggingpp/network" class="social-count" aria-label="311 users forked this repository">
      311
    </a>
  </li>
</ul>

    <h1 class="public ">
  <svg aria-hidden="true" class="octicon octicon-repo" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M4 9H3V8h1v1zm0-3H3v1h1V6zm0-2H3v1h1V4zm0-2H3v1h1V2zm8-1v12c0 .55-.45 1-1 1H6v2l-1.5-1.5L3 16v-2H1c-.55 0-1-.45-1-1V1c0-.55.45-1 1-1h10c.55 0 1 .45 1 1zm-1 10H1v2h2v-1h3v1h5v-2zm0-10H2v9h9V1z"></path></svg>
  <span class="author" itemprop="author"><a href="https://github.com/easylogging" class="url fn" rel="author">easylogging</a></span><!--
--><span class="path-divider">/</span><!--
--><strong itemprop="name"><a href="https://github.com/easylogging/easyloggingpp" data-pjax="#js-repo-pjax-container">easyloggingpp</a></strong>

</h1>

  </div>
  <div class="container">
    
<nav class="reponav js-repo-nav js-sidenav-container-pjax" itemscope="" itemtype="http://schema.org/BreadcrumbList" role="navigation" data-pjax="#js-repo-pjax-container">

  <span itemscope="" itemtype="http://schema.org/ListItem" itemprop="itemListElement">
    <a href="https://github.com/easylogging/easyloggingpp" class="js-selected-navigation-item reponav-item selected" data-hotkey="g c" data-selected-links="repo_source repo_downloads repo_commits repo_releases repo_tags repo_branches /easylogging/easyloggingpp" itemprop="url">
      <svg aria-hidden="true" class="octicon octicon-code" height="16" version="1.1" viewBox="0 0 14 16" width="14"><path fill-rule="evenodd" d="M9.5 3L8 4.5 11.5 8 8 11.5 9.5 13 14 8 9.5 3zm-5 0L0 8l4.5 5L6 11.5 2.5 8 6 4.5 4.5 3z"></path></svg>
      <span itemprop="name">Code</span>
      <meta itemprop="position" content="1">
</a>  </span>

    <span itemscope="" itemtype="http://schema.org/ListItem" itemprop="itemListElement">
      <a href="https://github.com/easylogging/easyloggingpp/issues" class="js-selected-navigation-item reponav-item" data-hotkey="g i" data-selected-links="repo_issues repo_labels repo_milestones /easylogging/easyloggingpp/issues" itemprop="url">
        <svg aria-hidden="true" class="octicon octicon-issue-opened" height="16" version="1.1" viewBox="0 0 14 16" width="14"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg>
        <span itemprop="name">Issues</span>
        <span class="counter">95</span>
        <meta itemprop="position" content="2">
</a>    </span>

  <span itemscope="" itemtype="http://schema.org/ListItem" itemprop="itemListElement">
    <a href="https://github.com/easylogging/easyloggingpp/pulls" class="js-selected-navigation-item reponav-item" data-hotkey="g p" data-selected-links="repo_pulls /easylogging/easyloggingpp/pulls" itemprop="url">
      <svg aria-hidden="true" class="octicon octicon-git-pull-request" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M11 11.28V5c-.03-.78-.34-1.47-.94-2.06C9.46 2.35 8.78 2.03 8 2H7V0L4 3l3 3V4h1c.27.02.48.11.69.31.21.2.3.42.31.69v6.28A1.993 1.993 0 0 0 10 15a1.993 1.993 0 0 0 1-3.72zm-1 2.92c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zM4 3c0-1.11-.89-2-2-2a1.993 1.993 0 0 0-1 3.72v6.56A1.993 1.993 0 0 0 2 15a1.993 1.993 0 0 0 1-3.72V4.72c.59-.34 1-.98 1-1.72zm-.8 10c0 .66-.55 1.2-1.2 1.2-.65 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2zM2 4.2C1.34 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z"></path></svg>
      <span itemprop="name">Pull requests</span>
      <span class="counter">12</span>
      <meta itemprop="position" content="3">
</a>  </span>

  <a href="https://github.com/easylogging/easyloggingpp/projects" class="js-selected-navigation-item reponav-item" data-selected-links="repo_projects new_repo_project repo_project /easylogging/easyloggingpp/projects">
    <svg aria-hidden="true" class="octicon octicon-project" height="16" version="1.1" viewBox="0 0 15 16" width="15"><path fill-rule="evenodd" d="M10 12h3V2h-3v10zm-4-2h3V2H6v8zm-4 4h3V2H2v12zm-1 1h13V1H1v14zM14 0H1a1 1 0 0 0-1 1v14a1 1 0 0 0 1 1h13a1 1 0 0 0 1-1V1a1 1 0 0 0-1-1z"></path></svg>
    Projects
    <span class="counter">0</span>
</a>


  <a href="https://github.com/easylogging/easyloggingpp/pulse" class="js-selected-navigation-item reponav-item" data-selected-links="pulse /easylogging/easyloggingpp/pulse">
    <svg aria-hidden="true" class="octicon octicon-pulse" height="16" version="1.1" viewBox="0 0 14 16" width="14"><path fill-rule="evenodd" d="M11.5 8L8.8 5.4 6.6 8.5 5.5 1.6 2.38 8H0v2h3.6l.9-1.8.9 5.4L9 8.5l1.6 1.5H14V8z"></path></svg>
    Pulse
</a>
  <a href="https://github.com/easylogging/easyloggingpp/graphs" class="js-selected-navigation-item reponav-item" data-selected-links="repo_graphs repo_contributors /easylogging/easyloggingpp/graphs">
    <svg aria-hidden="true" class="octicon octicon-graph" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M16 14v1H0V0h1v14h15zM5 13H3V8h2v5zm4 0H7V3h2v10zm4 0h-2V6h2v7z"></path></svg>
    Graphs
</a>

</nav>

  </div>
</div><div class="container new-discussion-timeline experiment-repo-nav">
  <div class="repository-content">

    

<a href="https://github.com/easylogging/easyloggingpp/blob/f9275e48c758e5493bea33f547181372561c07ec/README.md" class="d-none js-permalink-shortcut" data-hotkey="y">Permalink</a>

<!-- blob contrib key: blob_contributors:v21:a54fe68e2ffb62783ce0d1adc9c3ffaf -->

<div class="file-navigation js-zeroclipboard-container">
  
<div class="select-menu branch-select-menu js-menu-container js-select-menu float-left">
  <button class="btn btn-sm select-menu-button js-menu-target css-truncate" data-hotkey="w" type="button" aria-label="Switch branches or tags" tabindex="0" aria-haspopup="true">
    <i>Branch:</i>
    <span class="js-select-button css-truncate-target">master</span>
  </button>

  <div class="select-menu-modal-holder js-menu-content js-navigation-container" data-pjax="" aria-hidden="true">

    <div class="select-menu-modal">
      <div class="select-menu-header">
        <svg aria-label="Close" class="octicon octicon-x js-menu-close" height="16" role="img" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M7.48 8l3.75 3.75-1.48 1.48L6 9.48l-3.75 3.75-1.48-1.48L4.52 8 .77 4.25l1.48-1.48L6 6.52l3.75-3.75 1.48 1.48z"></path></svg>
        <span class="select-menu-title">Switch branches/tags</span>
      </div>

      <div class="select-menu-filters">
        <div class="select-menu-text-filter">
          <input aria-label="Filter branches/tags" id="context-commitish-filter-field" class="form-control js-filterable-field js-navigation-enable" placeholder="Filter branches/tags" type="text">
        </div>
        <div class="select-menu-tabs">
          <ul>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="branches" data-filter-placeholder="Filter branches/tags" class="js-select-menu-tab" role="tab">Branches</a>
            </li>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="tags" data-filter-placeholder="Find a tag…" class="js-select-menu-tab" role="tab">Tags</a>
            </li>
          </ul>
        </div>
      </div>

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="branches" role="menu">

        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <a class="select-menu-item js-navigation-item js-navigation-open " href="https://github.com/easylogging/easyloggingpp/blob/develop/README.md" data-name="develop" data-skip-pjax="true" rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target js-select-menu-filter-text">
                develop
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open selected" href="https://github.com/easylogging/easyloggingpp/blob/master/README.md" data-name="master" data-skip-pjax="true" rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target js-select-menu-filter-text">
                master
              </span>
            </a>
        </div>

          <div class="select-menu-no-results">Nothing to show</div>
      </div>

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="tags">
        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <a class="select-menu-item js-navigation-item js-navigation-open " href="https://github.com/easylogging/easyloggingpp/tree/v9.83/README.md" data-name="v9.83" data-skip-pjax="true" rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="v9.83">
                v9.83
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open " href="https://github.com/easylogging/easyloggingpp/tree/v9.82/README.md" data-name="v9.82" data-skip-pjax="true" rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="v9.82">
                v9.82
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open " href="https://github.com/easylogging/easyloggingpp/tree/v9.80/README.md" data-name="v9.80" data-skip-pjax="true" rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="v9.80">
                v9.80
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open " href="https://github.com/easylogging/easyloggingpp/tree/v9.79/README.md" data-name="v9.79" data-skip-pjax="true" rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="v9.79">
                v9.79
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open " href="https://github.com/easylogging/easyloggingpp/tree/v9.78/README.md" data-name="v9.78" data-skip-pjax="true" rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="v9.78">
                v9.78
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open " href="https://github.com/easylogging/easyloggingpp/tree/v9.77/README.md" data-name="v9.77" data-skip-pjax="true" rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="v9.77">
                v9.77
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open " href="https://github.com/easylogging/easyloggingpp/tree/v9.76/README.md" data-name="v9.76" data-skip-pjax="true" rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="v9.76">
                v9.76
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open " href="https://github.com/easylogging/easyloggingpp/tree/v9.75/README.md" data-name="v9.75" data-skip-pjax="true" rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="v9.75">
                v9.75
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open " href="https://github.com/easylogging/easyloggingpp/tree/v9.74/README.md" data-name="v9.74" data-skip-pjax="true" rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="v9.74">
                v9.74
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open " href="https://github.com/easylogging/easyloggingpp/tree/v9.73/README.md" data-name="v9.73" data-skip-pjax="true" rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="v9.73">
                v9.73
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open " href="https://github.com/easylogging/easyloggingpp/tree/v9.72/README.md" data-name="v9.72" data-skip-pjax="true" rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="v9.72">
                v9.72
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open " href="https://github.com/easylogging/easyloggingpp/tree/v9.71/README.md" data-name="v9.71" data-skip-pjax="true" rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="v9.71">
                v9.71
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open " href="https://github.com/easylogging/easyloggingpp/tree/v9.70/README.md" data-name="v9.70" data-skip-pjax="true" rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="v9.70">
                v9.70
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open " href="https://github.com/easylogging/easyloggingpp/tree/v9.69/README.md" data-name="v9.69" data-skip-pjax="true" rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="v9.69">
                v9.69
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open " href="https://github.com/easylogging/easyloggingpp/tree/v9.68/README.md" data-name="v9.68" data-skip-pjax="true" rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="v9.68">
                v9.68
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open " href="https://github.com/easylogging/easyloggingpp/tree/v9.67/README.md" data-name="v9.67" data-skip-pjax="true" rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="v9.67">
                v9.67
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open " href="https://github.com/easylogging/easyloggingpp/tree/v9.66/README.md" data-name="v9.66" data-skip-pjax="true" rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="v9.66">
                v9.66
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open " href="https://github.com/easylogging/easyloggingpp/tree/v9.65/README.md" data-name="v9.65" data-skip-pjax="true" rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="v9.65">
                v9.65
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open " href="https://github.com/easylogging/easyloggingpp/tree/v9.64/README.md" data-name="v9.64" data-skip-pjax="true" rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="v9.64">
                v9.64
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open " href="https://github.com/easylogging/easyloggingpp/tree/v9.63/README.md" data-name="v9.63" data-skip-pjax="true" rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="v9.63">
                v9.63
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open " href="https://github.com/easylogging/easyloggingpp/tree/v9.62/README.md" data-name="v9.62" data-skip-pjax="true" rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="v9.62">
                v9.62
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open " href="https://github.com/easylogging/easyloggingpp/tree/v9.61/README.md" data-name="v9.61" data-skip-pjax="true" rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="v9.61">
                v9.61
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open " href="https://github.com/easylogging/easyloggingpp/tree/v9.60/README.md" data-name="v9.60" data-skip-pjax="true" rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="v9.60">
                v9.60
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open " href="https://github.com/easylogging/easyloggingpp/tree/v9.59/README.md" data-name="v9.59" data-skip-pjax="true" rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="v9.59">
                v9.59
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open " href="https://github.com/easylogging/easyloggingpp/tree/v9.58/README.md" data-name="v9.58" data-skip-pjax="true" rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="v9.58">
                v9.58
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open " href="https://github.com/easylogging/easyloggingpp/tree/v9.57/README.md" data-name="v9.57" data-skip-pjax="true" rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="v9.57">
                v9.57
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open " href="https://github.com/easylogging/easyloggingpp/tree/v9.56/README.md" data-name="v9.56" data-skip-pjax="true" rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="v9.56">
                v9.56
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open " href="https://github.com/easylogging/easyloggingpp/tree/v9.55/README.md" data-name="v9.55" data-skip-pjax="true" rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="v9.55">
                v9.55
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open " href="https://github.com/easylogging/easyloggingpp/tree/v9.54/README.md" data-name="v9.54" data-skip-pjax="true" rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="v9.54">
                v9.54
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open " href="https://github.com/easylogging/easyloggingpp/tree/v9.53/README.md" data-name="v9.53" data-skip-pjax="true" rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="v9.53">
                v9.53
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open " href="https://github.com/easylogging/easyloggingpp/tree/v9.52/README.md" data-name="v9.52" data-skip-pjax="true" rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="v9.52">
                v9.52
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open " href="https://github.com/easylogging/easyloggingpp/tree/v9.51/README.md" data-name="v9.51" data-skip-pjax="true" rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="v9.51">
                v9.51
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open " href="https://github.com/easylogging/easyloggingpp/tree/v9.50/README.md" data-name="v9.50" data-skip-pjax="true" rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="v9.50">
                v9.50
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open " href="https://github.com/easylogging/easyloggingpp/tree/v9.49/README.md" data-name="v9.49" data-skip-pjax="true" rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="v9.49">
                v9.49
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open " href="https://github.com/easylogging/easyloggingpp/tree/v9.48/README.md" data-name="v9.48" data-skip-pjax="true" rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="v9.48">
                v9.48
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open " href="https://github.com/easylogging/easyloggingpp/tree/v9.47/README.md" data-name="v9.47" data-skip-pjax="true" rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="v9.47">
                v9.47
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open " href="https://github.com/easylogging/easyloggingpp/tree/v9.46/README.md" data-name="v9.46" data-skip-pjax="true" rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="v9.46">
                v9.46
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open " href="https://github.com/easylogging/easyloggingpp/tree/v9.45/README.md" data-name="v9.45" data-skip-pjax="true" rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="v9.45">
                v9.45
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open " href="https://github.com/easylogging/easyloggingpp/tree/v9.44/README.md" data-name="v9.44" data-skip-pjax="true" rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="v9.44">
                v9.44
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open " href="https://github.com/easylogging/easyloggingpp/tree/v9.43/README.md" data-name="v9.43" data-skip-pjax="true" rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="v9.43">
                v9.43
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open " href="https://github.com/easylogging/easyloggingpp/tree/v9.42/README.md" data-name="v9.42" data-skip-pjax="true" rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="v9.42">
                v9.42
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open " href="https://github.com/easylogging/easyloggingpp/tree/v9.41/README.md" data-name="v9.41" data-skip-pjax="true" rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="v9.41">
                v9.41
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open " href="https://github.com/easylogging/easyloggingpp/tree/v9.40/README.md" data-name="v9.40" data-skip-pjax="true" rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="v9.40">
                v9.40
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open " href="https://github.com/easylogging/easyloggingpp/tree/v9.39/README.md" data-name="v9.39" data-skip-pjax="true" rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="v9.39">
                v9.39
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open " href="https://github.com/easylogging/easyloggingpp/tree/v9.38/README.md" data-name="v9.38" data-skip-pjax="true" rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="v9.38">
                v9.38
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open " href="https://github.com/easylogging/easyloggingpp/tree/v9.37/README.md" data-name="v9.37" data-skip-pjax="true" rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="v9.37">
                v9.37
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open " href="https://github.com/easylogging/easyloggingpp/tree/v9.36/README.md" data-name="v9.36" data-skip-pjax="true" rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="v9.36">
                v9.36
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open " href="https://github.com/easylogging/easyloggingpp/tree/v9.35/README.md" data-name="v9.35" data-skip-pjax="true" rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="v9.35">
                v9.35
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open " href="https://github.com/easylogging/easyloggingpp/tree/v9.34/README.md" data-name="v9.34" data-skip-pjax="true" rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="v9.34">
                v9.34
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open " href="https://github.com/easylogging/easyloggingpp/tree/v9.33/README.md" data-name="v9.33" data-skip-pjax="true" rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="v9.33">
                v9.33
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open " href="https://github.com/easylogging/easyloggingpp/tree/v9.32/README.md" data-name="v9.32" data-skip-pjax="true" rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="v9.32">
                v9.32
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open " href="https://github.com/easylogging/easyloggingpp/tree/v9.31/README.md" data-name="v9.31" data-skip-pjax="true" rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="v9.31">
                v9.31
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open " href="https://github.com/easylogging/easyloggingpp/tree/v9.30/README.md" data-name="v9.30" data-skip-pjax="true" rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="v9.30">
                v9.30
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open " href="https://github.com/easylogging/easyloggingpp/tree/v9.29/README.md" data-name="v9.29" data-skip-pjax="true" rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="v9.29">
                v9.29
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open " href="https://github.com/easylogging/easyloggingpp/tree/v9.28/README.md" data-name="v9.28" data-skip-pjax="true" rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="v9.28">
                v9.28
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open " href="https://github.com/easylogging/easyloggingpp/tree/v9.27/README.md" data-name="v9.27" data-skip-pjax="true" rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="v9.27">
                v9.27
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open " href="https://github.com/easylogging/easyloggingpp/tree/v9.26/README.md" data-name="v9.26" data-skip-pjax="true" rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="v9.26">
                v9.26
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open " href="https://github.com/easylogging/easyloggingpp/tree/v9.25/README.md" data-name="v9.25" data-skip-pjax="true" rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="v9.25">
                v9.25
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open " href="https://github.com/easylogging/easyloggingpp/tree/v9.24/README.md" data-name="v9.24" data-skip-pjax="true" rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="v9.24">
                v9.24
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open " href="https://github.com/easylogging/easyloggingpp/tree/v9.23/README.md" data-name="v9.23" data-skip-pjax="true" rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="v9.23">
                v9.23
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open " href="https://github.com/easylogging/easyloggingpp/tree/v9.22/README.md" data-name="v9.22" data-skip-pjax="true" rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="v9.22">
                v9.22
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open " href="https://github.com/easylogging/easyloggingpp/tree/v9.21/README.md" data-name="v9.21" data-skip-pjax="true" rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="v9.21">
                v9.21
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open " href="https://github.com/easylogging/easyloggingpp/tree/v9.20/README.md" data-name="v9.20" data-skip-pjax="true" rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="v9.20">
                v9.20
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open " href="https://github.com/easylogging/easyloggingpp/tree/v9.19/README.md" data-name="v9.19" data-skip-pjax="true" rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="v9.19">
                v9.19
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open " href="https://github.com/easylogging/easyloggingpp/tree/v9.18/README.md" data-name="v9.18" data-skip-pjax="true" rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="v9.18">
                v9.18
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open " href="https://github.com/easylogging/easyloggingpp/tree/v9.17/README.md" data-name="v9.17" data-skip-pjax="true" rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="v9.17">
                v9.17
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open " href="https://github.com/easylogging/easyloggingpp/tree/v9.16/README.md" data-name="v9.16" data-skip-pjax="true" rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="v9.16">
                v9.16
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open " href="https://github.com/easylogging/easyloggingpp/tree/v9.15/README.md" data-name="v9.15" data-skip-pjax="true" rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="v9.15">
                v9.15
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open " href="https://github.com/easylogging/easyloggingpp/tree/v9.14/README.md" data-name="v9.14" data-skip-pjax="true" rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="v9.14">
                v9.14
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open " href="https://github.com/easylogging/easyloggingpp/tree/v9.13/README.md" data-name="v9.13" data-skip-pjax="true" rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="v9.13">
                v9.13
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open " href="https://github.com/easylogging/easyloggingpp/tree/v9.12/README.md" data-name="v9.12" data-skip-pjax="true" rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="v9.12">
                v9.12
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open " href="https://github.com/easylogging/easyloggingpp/tree/v9.11/README.md" data-name="v9.11" data-skip-pjax="true" rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="v9.11">
                v9.11
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open " href="https://github.com/easylogging/easyloggingpp/tree/v9.10/README.md" data-name="v9.10" data-skip-pjax="true" rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="v9.10">
                v9.10
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open " href="https://github.com/easylogging/easyloggingpp/tree/v9.09/README.md" data-name="v9.09" data-skip-pjax="true" rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="v9.09">
                v9.09
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open " href="https://github.com/easylogging/easyloggingpp/tree/v9.08/README.md" data-name="v9.08" data-skip-pjax="true" rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="v9.08">
                v9.08
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open " href="https://github.com/easylogging/easyloggingpp/tree/v9.07/README.md" data-name="v9.07" data-skip-pjax="true" rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="v9.07">
                v9.07
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open " href="https://github.com/easylogging/easyloggingpp/tree/v9.06/README.md" data-name="v9.06" data-skip-pjax="true" rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="v9.06">
                v9.06
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open " href="https://github.com/easylogging/easyloggingpp/tree/v9.04/README.md" data-name="v9.04" data-skip-pjax="true" rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="v9.04">
                v9.04
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open " href="https://github.com/easylogging/easyloggingpp/tree/v9.03/README.md" data-name="v9.03" data-skip-pjax="true" rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="v9.03">
                v9.03
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open " href="https://github.com/easylogging/easyloggingpp/tree/v9.02/README.md" data-name="v9.02" data-skip-pjax="true" rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="v9.02">
                v9.02
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open " href="https://github.com/easylogging/easyloggingpp/tree/v9.01/README.md" data-name="v9.01" data-skip-pjax="true" rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="v9.01">
                v9.01
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open " href="https://github.com/easylogging/easyloggingpp/tree/v9.00/README.md" data-name="v9.00" data-skip-pjax="true" rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="v9.00">
                v9.00
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open " href="https://github.com/easylogging/easyloggingpp/tree/v8.91/README.md" data-name="v8.91" data-skip-pjax="true" rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="v8.91">
                v8.91
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open " href="https://github.com/easylogging/easyloggingpp/tree/v8.90/README.md" data-name="v8.90" data-skip-pjax="true" rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="v8.90">
                v8.90
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open " href="https://github.com/easylogging/easyloggingpp/tree/v8.85/README.md" data-name="v8.85" data-skip-pjax="true" rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="v8.85">
                v8.85
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open " href="https://github.com/easylogging/easyloggingpp/tree/v8.83/README.md" data-name="v8.83" data-skip-pjax="true" rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="v8.83">
                v8.83
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open " href="https://github.com/easylogging/easyloggingpp/tree/v8.82/README.md" data-name="v8.82" data-skip-pjax="true" rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="v8.82">
                v8.82
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open " href="https://github.com/easylogging/easyloggingpp/tree/v8.80/README.md" data-name="v8.80" data-skip-pjax="true" rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="v8.80">
                v8.80
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open " href="https://github.com/easylogging/easyloggingpp/tree/v8.76/README.md" data-name="v8.76" data-skip-pjax="true" rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="v8.76">
                v8.76
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open " href="https://github.com/easylogging/easyloggingpp/tree/v8.75/README.md" data-name="v8.75" data-skip-pjax="true" rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="v8.75">
                v8.75
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open " href="https://github.com/easylogging/easyloggingpp/tree/v8.72/README.md" data-name="v8.72" data-skip-pjax="true" rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="v8.72">
                v8.72
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open " href="https://github.com/easylogging/easyloggingpp/tree/v8.71/README.md" data-name="v8.71" data-skip-pjax="true" rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="v8.71">
                v8.71
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open " href="https://github.com/easylogging/easyloggingpp/tree/v8.70/README.md" data-name="v8.70" data-skip-pjax="true" rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="v8.70">
                v8.70
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open " href="https://github.com/easylogging/easyloggingpp/tree/v8.66/README.md" data-name="v8.66" data-skip-pjax="true" rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="v8.66">
                v8.66
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open " href="https://github.com/easylogging/easyloggingpp/tree/v8.65/README.md" data-name="v8.65" data-skip-pjax="true" rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="v8.65">
                v8.65
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open " href="https://github.com/easylogging/easyloggingpp/tree/v8.61/README.md" data-name="v8.61" data-skip-pjax="true" rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="v8.61">
                v8.61
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open " href="https://github.com/easylogging/easyloggingpp/tree/v8.60/README.md" data-name="v8.60" data-skip-pjax="true" rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="v8.60">
                v8.60
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open " href="https://github.com/easylogging/easyloggingpp/tree/v8.59/README.md" data-name="v8.59" data-skip-pjax="true" rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="v8.59">
                v8.59
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open " href="https://github.com/easylogging/easyloggingpp/tree/9.91/README.md" data-name="9.91" data-skip-pjax="true" rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="9.91">
                9.91
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open " href="https://github.com/easylogging/easyloggingpp/tree/9.90/README.md" data-name="9.90" data-skip-pjax="true" rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="9.90">
                9.90
              </span>
            </a>
        </div>

        <div class="select-menu-no-results">Nothing to show</div>
      </div>

    </div>
  </div>
</div>

  <div class="BtnGroup float-right">
    <a href="https://github.com/easylogging/easyloggingpp/find/master" class="js-pjax-capture-input btn btn-sm BtnGroup-item" data-pjax="" data-hotkey="t">
      Find file
    </a>
    <button aria-label="Copy file path to clipboard" class="js-zeroclipboard btn btn-sm BtnGroup-item tooltipped tooltipped-s" data-copied-hint="Copied!" type="button">Copy path</button>
  </div>
  <div class="breadcrumb js-zeroclipboard-target">
    <span class="repo-root js-repo-root"><span class="js-path-segment"><a href="https://github.com/easylogging/easyloggingpp"><span>easyloggingpp</span></a></span></span><span class="separator">/</span><strong class="final-path">README.md</strong>
  </div>
</div>


  <div class="commit-tease">
      <span class="float-right">
        <a class="commit-tease-sha" href="https://github.com/easylogging/easyloggingpp/commit/b687613867d83ef7647131f821a357cbff68e975" data-pjax="">
          b687613
        </a>
        <relative-time title="25 janv. 2017 13:20 UTC+1" datetime="2017-01-25T12:20:32Z">a day ago</relative-time>
      </span>
      <div>
        <img alt="@mkhan3189" class="avatar" src="easyloggingpp_README_files/1683515_002.jpg" height="20" width="20">
        <a href="https://github.com/mkhan3189" class="user-mention" rel="contributor">mkhan3189</a>
          <a href="https://github.com/easylogging/easyloggingpp/commit/b687613867d83ef7647131f821a357cbff68e975" class="message" data-pjax="true" title="v9.91 release">v9.91 release</a>
      </div>

    <div class="commit-tease-contributors">
      <button type="button" class="btn-link muted-link contributors-toggle" data-facebox="#blob_contributors_box">
        <strong>5</strong>
         contributors
      </button>
          <a class="avatar-link tooltipped tooltipped-s" aria-label="mkhan3189" href="https://github.com/easylogging/easyloggingpp/commits/master/README.md?author=mkhan3189"><img alt="@mkhan3189" class="avatar" src="easyloggingpp_README_files/1683515_002.jpg" height="20" width="20"> </a>
    <a class="avatar-link tooltipped tooltipped-s" aria-label="adah1972" href="https://github.com/easylogging/easyloggingpp/commits/master/README.md?author=adah1972"><img alt="@adah1972" class="avatar" src="easyloggingpp_README_files/2137834_002.jpg" height="20" width="20"> </a>
    <a class="avatar-link tooltipped tooltipped-s" aria-label="mozzbozz" href="https://github.com/easylogging/easyloggingpp/commits/master/README.md?author=mozzbozz"><img alt="@mozzbozz" class="avatar" src="easyloggingpp_README_files/1001601_002.png" height="20" width="20"> </a>
    <a class="avatar-link tooltipped tooltipped-s" aria-label="easylogging" href="https://github.com/easylogging/easyloggingpp/commits/master/README.md?author=easylogging"><img alt="@easylogging" class="avatar" src="easyloggingpp_README_files/5101887_002.png" height="20" width="20"> </a>
    <a class="avatar-link tooltipped tooltipped-s" aria-label="bitdeli-chef" href="https://github.com/easylogging/easyloggingpp/commits/master/README.md?author=bitdeli-chef"><img alt="@bitdeli-chef" class="avatar" src="easyloggingpp_README_files/3092978_002.png" height="20" width="20"> </a>


    </div>

    <div id="blob_contributors_box" style="display:none">
      <h2 class="facebox-header" data-facebox-id="facebox-header">Users who have contributed to this file</h2>
      <ul class="facebox-user-list" data-facebox-id="facebox-description">
          <li class="facebox-user-list-item">
            <img alt="@mkhan3189" src="easyloggingpp_README_files/1683515.jpg" height="24" width="24">
            <a href="https://github.com/mkhan3189">mkhan3189</a>
          </li>
          <li class="facebox-user-list-item">
            <img alt="@adah1972" src="easyloggingpp_README_files/2137834.jpg" height="24" width="24">
            <a href="https://github.com/adah1972">adah1972</a>
          </li>
          <li class="facebox-user-list-item">
            <img alt="@mozzbozz" src="easyloggingpp_README_files/1001601.png" height="24" width="24">
            <a href="https://github.com/mozzbozz">mozzbozz</a>
          </li>
          <li class="facebox-user-list-item">
            <img alt="@easylogging" src="easyloggingpp_README_files/5101887.png" height="24" width="24">
            <a href="https://github.com/easylogging">easylogging</a>
          </li>
          <li class="facebox-user-list-item">
            <img alt="@bitdeli-chef" src="easyloggingpp_README_files/3092978.png" height="24" width="24">
            <a href="https://github.com/bitdeli-chef">bitdeli-chef</a>
          </li>
      </ul>
    </div>
  </div>


<div class="file">
  <div class="file-header">
  <div class="file-actions">

    <div class="BtnGroup">
      <a href="https://github.com/easylogging/easyloggingpp/raw/master/README.md" class="btn btn-sm BtnGroup-item" id="raw-url">Raw</a>
        <a href="https://github.com/easylogging/easyloggingpp/blame/master/README.md" class="btn btn-sm js-update-url-with-hash BtnGroup-item" data-hotkey="b">Blame</a>
      <a href="https://github.com/easylogging/easyloggingpp/commits/master/README.md" class="btn btn-sm BtnGroup-item" rel="nofollow">History</a>
    </div>

        <a class="btn-octicon tooltipped tooltipped-nw" href="https://windows.github.com/" aria-label="Open this file in GitHub Desktop" data-ga-click="Repository, open with desktop, type:windows">
            <svg aria-hidden="true" class="octicon octicon-device-desktop" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M15 2H1c-.55 0-1 .45-1 1v9c0 .55.45 1 1 1h5.34c-.25.61-.86 1.39-2.34 2h8c-1.48-.61-2.09-1.39-2.34-2H15c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1zm0 9H1V3h14v8z"></path></svg>
        </a>

        <button type="button" class="btn-octicon disabled tooltipped tooltipped-nw" aria-label="You must be signed in to make or propose changes">
          <svg aria-hidden="true" class="octicon octicon-pencil" height="16" version="1.1" viewBox="0 0 14 16" width="14"><path fill-rule="evenodd" d="M0 12v3h3l8-8-3-3-8 8zm3 2H1v-2h1v1h1v1zm10.3-9.3L12 6 9 3l1.3-1.3a.996.996 0 0 1 1.41 0l1.59 1.59c.39.39.39 1.02 0 1.41z"></path></svg>
        </button>
        <button type="button" class="btn-octicon btn-octicon-danger disabled tooltipped tooltipped-nw" aria-label="You must be signed in to make or propose changes">
          <svg aria-hidden="true" class="octicon octicon-trashcan" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M11 2H9c0-.55-.45-1-1-1H5c-.55 0-1 .45-1 1H2c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1v9c0 .55.45 1 1 1h7c.55 0 1-.45 1-1V5c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1zm-1 12H3V5h1v8h1V5h1v8h1V5h1v8h1V5h1v9zm1-10H2V3h9v1z"></path></svg>
        </button>
  </div>

  <div class="file-info">
      1407 lines (1085 sloc)
      <span class="file-info-divider"></span>
    89.4 KB
  </div>
</div>

  
  <div id="readme" class="readme blob instapaper_body">
    <article class="markdown-body entry-content" itemprop="text"><p><a href="https://raw.githubusercontent.com/easylogging/homepage/master/images/banner.png?v=4" target="_blank"><img src="easyloggingpp_README_files/banner.png" alt="banner" style="max-width:100%;"></a></p>

<pre><code>                                   ‫بسم الله الرَّحْمَنِ الرَّحِيمِ
</code></pre>

<blockquote>
<p><strong>Manual For v9.91</strong></p>

<p><a href="https://travis-ci.org/easylogging/easyloggingpp"><img src="easyloggingpp_README_files/68747470733a2f2f7472617669732d63692e6f72672f656173796c6f6767.png" alt="Build Status" data-canonical-src="https://travis-ci.org/easylogging/easyloggingpp.png?branch=develop" style="max-width:100%;"></a></p>
</blockquote>

<h3><a id="user-content-quick-links" class="anchor" href="#quick-links" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Quick Links</h3>

<p><a href="https://github.com/easylogging/easyloggingpp/releases/latest"><img src="easyloggingpp_README_files/download.png" alt="download" style="max-width:100%;"> Latest Release</a></p>

<p><a href="https://github.com/easylogging/easyloggingpp/tree/master/doc/RELEASE-NOTES-v9.91"><img src="easyloggingpp_README_files/notes.png" alt="notes" style="max-width:100%;"> Release Notes</a></p>

<p><a href="https://github.com/easylogging/easyloggingpp/tree/9.90/samples"><img src="easyloggingpp_README_files/sample.png" alt="samples" style="max-width:100%;"> Samples</a></p>

<p><a href="http://muflihun.com/support/"><img src="easyloggingpp_README_files/68747470733a2f2f7777772e70617970616c6f626a656374732e636f6d2f.gif" alt="paypal" data-canonical-src="https://www.paypalobjects.com/en_AU/i/btn/btn_donateCC_LG.gif" style="max-width:100%;"></a></p>

<hr>

<h3><a id="user-content-table-of-contents" class="anchor" href="#table-of-contents" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Table of Contents</h3>

<pre><a href="#introduction">Introduction</a>
    <a href="#why-yet-another-library">Why yet another library</a>
    <a href="#features-at-a-glance">Features at a glance</a>
<a href="#getting-started">Getting Started</a>
    <a href="#download">Download</a>
    <a href="#quick-start">Quick Start</a>
    <a href="#install-optional">Install (Optional)</a>
    <a href="#setting-application-arguments">Setting Application Arguments</a>
<a href="#configuration">Configuration</a>
    <a href="#level">Level</a>
    <a href="#configure">Configure</a>
        <a href="#using-configuration-file">Using Configuration File</a>
        <a href="#using-elconfigurations-class">Using el::Configurations Class</a>
        <a href="#using-in-line-configurations">Using In line Configurations</a>
    <a href="#default-configurations">Default Configurations</a>
    <a href="#global-configurations">Global Configurations</a>
    <a href="#logging-format-specifiers">Logging Format Specifiers</a>
    <a href="#datetime-format-specifiers">Date/Time Format Specifiers</a>
    <a href="#logging-flags">Logging Flags</a>
    <a href="#application-arguments">Application Arguments</a>
    <a href="#configuration-macros">Configuration Macros</a>
    <a href="#reading-configurations">Reading Configurations</a>
<a href="#logging">Logging</a>
    <a href="#basic">Basic</a>
    <a href="#conditional-logging">Conditional Logging</a>
    <a href="#occasional-logging">Occasional Logging</a>
    <a href="#printf-like-logging">printf Like Logging</a>
    <a href="#verbose-logging">Verbose Logging</a>
        <a href="#basic-1">Basic</a>
        <a href="#conditional-and-occasional">Conditional and Occasional</a>
        <a href="#verbose-level">Verbose Level</a>
        <a href="#check-if-verbose-logging-is-on">Check If Verbose Logging Is On</a>
        <a href="#vmodule">VModule</a>
    <a href="#registering-new-loggers">Registering New Loggers</a>
    <a href="#unregister-loggers">Unregister Loggers</a>
    <a href="#populating-existing-logger-ids">Populating Existing Logger IDs</a>
    <a href="#sharing-logging-repository">Sharing Logging Repository</a>
<a href="#extra-features">Extra Features</a>
    <a href="#performance-tracking">Performance Tracking</a>
        <a href="#conditional-performance-tracking">Conditional Performance Tracking</a>
        <a href="#make-use-of-performance-tracking-data">Make Use of Performance Tracking Data</a>
    <a href="#log-file-rotating">Log File Rotating</a>
    <a href="#crash-handling">Crash Handling</a>
        <a href="#installing-custom-crash-handlers">Installing Custom Crash Handlers</a>
    <a href="#stacktrace">Stacktrace</a>
    <a href="#multi-threading">Multi-threading</a>
    <a href="#check-macros">CHECK Macros</a>
    <a href="#logging-perror">Logging perror()</a>
    <a href="#syslog">Using Syslog</a>
    <a href="#stl-logging">STL Logging</a>
        <a href="#supported-templates">Supported Templates</a>
    <a href="#qt-logging">Qt Logging</a>
    <a href="#boost-logging">Boost Logging</a>
    <a href="#wxwidgets-logging">wxWidgets Logging</a>
    <a href="#extending-library">Extending Library</a>
        <a href="#logging-your-own-class">Logging Your Own Class</a>
        <a href="#logging-third-party-class">Logging Third-party Class</a>
    <a href="#manually-flushing-and-rolling-log-files">Manually Flushing and Rolling Log Files</a>
    <a href="#log-dispatch-callback">Log Dispatch Callback</a>
    <a href="#logger-registration-callback">Logger Registration Callback</a>
    <a href="#asynchronous-logging">Asynchronous Logging</a>
    <a href="#helper-classes">Helper Classes</a>
<a href="#contribution">Contribution</a>
    <a href="#submitting-patches">Submitting Patches</a>
    <a href="#reporting-a-bug">Reporting a Bug</a>
    <a href="#donation">Donation</a>
<a href="#compatibility">Compatibility</a>
<a href="#licence">Licence</a>
<a href="#disclaimer">Disclaimer</a>
</pre>

<h1><a id="user-content-introduction" class="anchor" href="#introduction" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Introduction</h1>

<p>Easylogging++ is single header, feature-rich, efficient logging 
library for C++ applications. It has been written keeping three things 
in mind; performance, management (setup, configure, logging, simplicity)
 and portability. Its highly configurable and extremely useful for small
 to large sized projects.
This manual is for Easylogging++ v9.91. For other versions please refer 
to corresponding <a href="https://github.com/easylogging/easyloggingpp/releases">release</a> on github.</p>

<p><a href="#table-of-contents"><img src="easyloggingpp_README_files/up.png" alt="top" style="max-width:100%;"> Goto Top</a></p>

<h3><a id="user-content-why-yet-another-library" class="anchor" href="#why-yet-another-library" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Why yet another library</h3>

<p>If you are working on a small utility or large project in C++, this 
library can be handy. Its based on single header and does not require 
linking or installation. You can import into your project as if its part
 of your project. This library has been designed with various thoughts 
in mind (i.e, portability, performance, usability, features and easy to 
setup).</p>

<p>Why yet another library? Well, answer is pretty straight forward, use
 it as if you wrote it so you can fix issues (if any) as you go or raise
 them on github. In addition to that, I have not seen any logging 
library based on single-header with such a design where you can 
configure on the go and get the same performance. I have seen other 
single-header logging libraries for C++ but either they use external 
libraries, e.g, boost, Qt to support certain features like threading, 
regular expression or date etc. This library has everything built-in to 
prevent usage of external libraries, not that I don't like those 
libraries, in fact I love them, but because not all projects use these 
libraries, I couldn't take risk of depending on them.</p>

<p><a href="#table-of-contents"><img src="easyloggingpp_README_files/up.png" alt="top" style="max-width:100%;"> Goto Top</a></p>

<h3><a id="user-content-features-at-a-glance" class="anchor" href="#features-at-a-glance" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Features at a glance</h3>

<p>Easylogging++ is feature-rich containing many features that both 
typical and advanced developer will require while writing a software;</p>

<ul>
<li>Highly configurable</li>
<li>Extremely fast</li>
<li>Thread and type safe</li>
<li>Cross-platform</li>
<li>Custom log patterns</li>
<li>Conditional and occasional logging</li>
<li>Performance tracking</li>
<li>Verbose logging</li>
<li>Crash handling</li>
<li>Helper CHECK macros</li>
<li>STL logging</li>
<li>Third-party library logging (Qt, boost, wxWidgets etc)</li>
<li>Extensible (Logging your own class or third-party class)</li>
<li><p>And many more...</p>

<p><a href="#table-of-contents"><img src="easyloggingpp_README_files/up.png" alt="top" style="max-width:100%;"> Goto Top</a></p></li>
</ul>

<h1><a id="user-content-getting-started" class="anchor" href="#getting-started" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Getting Started</h1>

<h3><a id="user-content-download" class="anchor" href="#download" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Download</h3>

<p>Download latest version from <a href="https://github.com/easylogging/easyloggingpp/releases/latest">Latest Release</a></p>

<p>For other releases, please visit <a href="https://github.com/easylogging/easyloggingpp/releases">releases page</a>. If you application does not support C++11, please consider using <a href="https://github.com/easylogging/easyloggingpp/tree/v8.91">v8.91</a>. This is stable version for C++98 and C++03, just lack some features.</p>

<p><a href="#table-of-contents"><img src="easyloggingpp_README_files/up.png" alt="top" style="max-width:100%;"> Goto Top</a></p>

<h3><a id="user-content-quick-start" class="anchor" href="#quick-start" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Quick Start</h3>

<p>In order to get started with Easylogging++, you can follow three easy steps:</p>

<ul>
<li>Download latest version</li>
<li>Include into your project (<code>easylogging++.h</code> and <code>easylogging++.cc</code>)</li>
<li>Initialize using single macro... and off you go!</li>
</ul>

<div class="highlight highlight-source-c++"><pre>#<span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">"</span>easylogging++.h<span class="pl-pds">"</span></span>

INITIALIZE_EASYLOGGINGPP

<span class="pl-k">int</span> <span class="pl-en">main</span>(<span class="pl-k">int</span> argc, <span class="pl-k">char</span>* argv[]) {
   <span class="pl-c1">LOG</span>(INFO) &lt;&lt; <span class="pl-s"><span class="pl-pds">"</span>My first info log using default logger<span class="pl-pds">"</span></span>;
   <span class="pl-k">return</span> <span class="pl-c1">0</span>;
}</pre></div>

<p>Now compile using</p>

<pre><code>g++ main.cc easylogging++.cc -o prog -std=c++11
</code></pre>

<p>That simple! Please note that <code>INITIALIZE_EASYLOGGINGPP</code> should be used once and once-only otherwise you will end up getting compilation errors. This is definiting several <code>extern</code>
 variables. This means it can be defined only once per application. Best
 place to put this initialization statement is in file where <code>int main(int, char**)</code> function is defined, right after last include statement.</p>

<h3><a id="user-content-install-optional" class="anchor" href="#install-optional" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Install (Optional)</h3>

<p>If you want to install this header system-wide, you can do so via:</p>

<pre><code>mkdir build
cd build
cmake ../
make
make install
</code></pre>

<p>With that said, you will still need <code>easylogging++.cc</code> file in order to compile. For header only, please check <a href="https://github.com/easylogging/easyloggingpp/releases/tag/9.89">v9.89</a> and lower.</p>

<p><a href="#table-of-contents"><img src="easyloggingpp_README_files/up.png" alt="top" style="max-width:100%;"> Goto Top</a></p>

<h3><a id="user-content-setting-application-arguments" class="anchor" href="#setting-application-arguments" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Setting Application Arguments</h3>

<p>It is always recommended to pass application arguments to 
Easylogging++. Some features of Easylogging++ require you to set 
application arguments, e.g, verbose logging to set verbose level or 
vmodules (explained later). In order to do that you can use helper macro
 or helper class;</p>

<div class="highlight highlight-source-c++"><pre><span class="pl-k">int</span> <span class="pl-en">main</span>(<span class="pl-k">int</span> argc, <span class="pl-k">char</span>* argv[]) {
   <span class="pl-c1">START_EASYLOGGINGPP</span>(argc, argv);
   ...
}</pre></div>

<p><a href="#table-of-contents"><img src="easyloggingpp_README_files/up.png" alt="top" style="max-width:100%;"> Goto Top</a></p>

<h1><a id="user-content-configuration" class="anchor" href="#configuration" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Configuration</h1>

<h3><a id="user-content-level" class="anchor" href="#level" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Level</h3>

<p>In order to start configuring your logging library, you must 
understand severity levels. Easylogging++ deliberately does not use 
hierarchical logging in order to fully control what's enabled and what's
 not. That being said, there is still option to use hierarchical logging
 using <code>LoggingFlag::HierarchicalLogging</code>. Easylogging++ has following levels (ordered for hierarchical levels)</p>

<table><thead>
<tr>
<th>Level</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td>Global</td>
<td>Generic level that represents all levels. Useful when setting global configuration for all levels.</td>
</tr>
<tr>
<td>Trace</td>
<td>Information that can be useful to back-trace certain events - mostly useful than debug logs.</td>
</tr>
<tr>
<td>Debug</td>
<td>Informational events most useful for developers to debug 
application. Only applicable if NDEBUG is not defined (for non-VC++) or 
_DEBUG is defined (for VC++).</td>
</tr>
<tr>
<td>Fatal</td>
<td>Very severe error event that will presumably lead the application to abort.</td>
</tr>
<tr>
<td>Error</td>
<td>Error information but will continue application to keep running.</td>
</tr>
<tr>
<td>Warning</td>
<td>Information representing errors in application but application will keep running.</td>
</tr>
<tr>
<td>Info</td>
<td>Mainly useful to represent current progress of application.</td>
</tr>
<tr>
<td>Verbose</td>
<td>Information that can be highly useful and vary with verbose logging 
level. Verbose logging is not applicable to hierarchical logging.</td>
</tr>
<tr>
<td>Unknown</td>
<td>Only applicable to hierarchical logging and is used to turn off logging completely.</td>
</tr>
</tbody></table>

<p><a href="#table-of-contents"><img src="easyloggingpp_README_files/up.png" alt="top" style="max-width:100%;"> Goto Top</a></p>

<h3><a id="user-content-configure" class="anchor" href="#configure" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Configure</h3>

<p>Easylogging++ is easy to configure. There are three possible ways to do so,</p>

<ul>
<li>Using configuration file</li>
<li>Using el::Configurations class</li>
<li>Using inline configuration</li>
</ul>

<h4><a id="user-content-using-configuration-file" class="anchor" href="#using-configuration-file" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Using Configuration File</h4>

<p>Configuration can be done by file that is loaded at runtime by <code>Configurations</code> class. This file has following format;</p>

<pre><code>* LEVEL:
  CONFIGURATION NAME  = "VALUE" ## Comment
  ANOTHER CONFIG NAME = "VALUE"
</code></pre>

<p>Level name starts with a star (*) and ends with colon (:). It is highly recommended to start your configuration file with <code>Global</code> level so that any configuration not specified in the file will automatically use configuration from <code>Global</code>. For example, if you set <code>Filename</code> in <code>Global</code>
 and you want all the levels to use same filename, do not set it 
explicitly for each level, library will use configuration value from <code>Global</code> automatically.
Following table contains configurations supported by configuration file.</p>

<table><thead>
<tr>
<th>Configuration Name</th>
<th>Type</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td><code>Enabled</code></td>
<td>bool</td>
<td>Determines whether or not corresponding level for logger is enabled. You may disable all logs by using <code>el::Level::Global</code></td>
</tr>
<tr>
<td><code>To_File</code></td>
<td>bool</td>
<td>Whether or not to write corresponding log to log file</td>
</tr>
<tr>
<td><code>To_Standard_Output</code></td>
<td>bool</td>
<td>Whether or not to write logs to standard output e.g, terminal or command prompt</td>
</tr>
<tr>
<td><code>Format</code></td>
<td>char*</td>
<td>Determines format/pattern of logging for corresponding level and logger.</td>
</tr>
<tr>
<td><code>Filename</code></td>
<td>char*</td>
<td>Determines log file (full path) to write logs to for corresponding level and logger</td>
</tr>
<tr>
<td><code>Subsecond_Precision</code></td>
<td>uint</td>
<td>Specifies subsecond precision (previously called 'milliseconds width'). Width can be within range (1-6)</td>
</tr>
<tr>
<td><code>Performance_Tracking</code></td>
<td>bool</td>
<td>Determines whether or not performance tracking is enabled. This does
 not depend on logger or level. Performance tracking always uses 
'performance' logger unless specified</td>
</tr>
<tr>
<td><code>Max_Log_File_Size</code></td>
<td>size_t</td>
<td>If log file size of corresponding level is &gt;= specified size, log file will be truncated.</td>
</tr>
<tr>
<td><code>Log_Flush_Threshold</code></td>
<td>size_t</td>
<td>Specifies number of log entries to hold until we flush pending log data</td>
</tr>
</tbody></table>

<p>Please do not use double-quotes anywhere in comment, you might end up in unexpected behaviour.</p>

<p>Sample Configuration File</p>

<pre><code>* GLOBAL:
   FORMAT               =  "%datetime %msg"
   FILENAME             =  "/tmp/logs/my.log"
   ENABLED              =  true
   TO_FILE              =  true
   TO_STANDARD_OUTPUT   =  true
   SUBSECOND_PRECISION  =  6
   PERFORMANCE_TRACKING =  true
   MAX_LOG_FILE_SIZE    =  2097152 ## 2MB - Comment starts with two hashes (##)
   LOG_FLUSH_THRESHOLD  =  100 ## Flush after every 100 logs
* DEBUG:
   FORMAT               = "%datetime{%d/%M} %func %msg"
</code></pre>

<h5><a id="user-content-explanation" class="anchor" href="#explanation" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Explanation</h5>

<p>Configuration file contents in above sample is straightforward. We start with <code>GLOBAL</code> level in order to override all the levels. Any explicitly defined subsequent level will override configuration from <code>GLOBAL</code>. For example, all the levels except for <code>DEBUG</code> have the same format, i.e, datetime and log message. For <code>DEBUG</code> level, we have only date (with day and month), source function and log message. The rest of configurations for <code>DEBUG</code> are used from <code>GLOBAL</code>. Also, notice <code>{%d/%M}</code> in <code>DEBUG</code> format above, if you do not specify date format, default format is used. Default values of date/time is <code>%d/%M/%Y %h:%m:%s,%g</code> For more information on these format specifiers, please refer to <a href="#datetime-format-specifiers">Date/Time Format Specifier</a> section below</p>

<h5><a id="user-content-usage" class="anchor" href="#usage" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Usage</h5>

<div class="highlight highlight-source-c++"><pre>#<span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">"</span>easylogging++.h<span class="pl-pds">"</span></span>

INITIALIZE_EASYLOGGINGPP

<span class="pl-k">int</span> <span class="pl-en">main</span>(<span class="pl-k">int</span> argc, <span class="pl-k">const</span> <span class="pl-k">char</span>** argv) {
    <span class="pl-c"><span class="pl-c">//</span> Load configuration from file</span>
    el::Configurations <span class="pl-smi">conf</span>(<span class="pl-s"><span class="pl-pds">"</span>/path/to/my-conf.conf<span class="pl-pds">"</span></span>);
    <span class="pl-c"><span class="pl-c">//</span> Reconfigure single logger</span>
    <span class="pl-c1">el::Loggers::reconfigureLogger</span>(<span class="pl-s"><span class="pl-pds">"</span>default<span class="pl-pds">"</span></span>, conf);
    <span class="pl-c"><span class="pl-c">//</span> Actually reconfigure all loggers instead</span>
    <span class="pl-c1">el::Loggers::reconfigureAllLoggers</span>(conf);
    <span class="pl-c"><span class="pl-c">//</span> Now all the loggers will use configuration from file</span>
}</pre></div>

<blockquote>
<p>Your configuration file can be converted to <code>el::Configurations</code> object (using constructor) that can be used where ever it is needed (like in above example).</p>
</blockquote>

<p><a href="#table-of-contents"><img src="easyloggingpp_README_files/up.png" alt="top" style="max-width:100%;"> Goto Top</a></p>

<h4><a id="user-content-using-elconfigurations-class" class="anchor" href="#using-elconfigurations-class" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Using el::Configurations Class</h4>

<p>You can set configurations or reset configurations;</p>

<div class="highlight highlight-source-c++"><pre>#<span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">"</span>easylogging++.h<span class="pl-pds">"</span></span>

INITIALIZE_EASYLOGGINGPP

<span class="pl-k">int</span> <span class="pl-en">main</span>(<span class="pl-k">int</span> argc, <span class="pl-k">const</span> <span class="pl-k">char</span>** argv) {
   el::Configurations defaultConf;
   defaultConf.<span class="pl-c1">setToDefault</span>();
    <span class="pl-c"><span class="pl-c">//</span> Values are always std::string</span>
   defaultConf.<span class="pl-c1">set</span>(el::Level::Info, 
            el::ConfigurationType::Format, <span class="pl-s"><span class="pl-pds">"</span>%datetime %level %msg<span class="pl-pds">"</span></span>);
    <span class="pl-c"><span class="pl-c">//</span> default logger uses default configurations</span>
    <span class="pl-c1">el::Loggers::reconfigureLogger</span>(<span class="pl-s"><span class="pl-pds">"</span>default<span class="pl-pds">"</span></span>, defaultConf);
    <span class="pl-c1">LOG</span>(INFO) &lt;&lt; <span class="pl-s"><span class="pl-pds">"</span>Log using default file<span class="pl-pds">"</span></span>;
    <span class="pl-c"><span class="pl-c">//</span> To set GLOBAL configurations you may use</span>
   defaultConf.<span class="pl-c1">setGlobally</span>(
            el::ConfigurationType::Format, <span class="pl-s"><span class="pl-pds">"</span>%date %msg<span class="pl-pds">"</span></span>);
   <span class="pl-c1">el::Loggers::reconfigureLogger</span>(<span class="pl-s"><span class="pl-pds">"</span>default<span class="pl-pds">"</span></span>, defaultConf);
    <span class="pl-k">return</span> <span class="pl-c1">0</span>;
}</pre></div>

<blockquote>
<p>Configuration just needs to be set once. If you are happy with default configuration, you may use it as well.</p>
</blockquote>

<p><a href="#table-of-contents"><img src="easyloggingpp_README_files/up.png" alt="top" style="max-width:100%;"> Goto Top</a></p>

<h4><a id="user-content-using-in-line-configurations" class="anchor" href="#using-in-line-configurations" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Using In line Configurations</h4>

<p>Inline configuration means you can set configurations in <code>std::string</code> but make sure you add all the new line characters etc. This is not recommended because it's always messy.</p>

<div class="highlight highlight-source-c++"><pre>el::Configurations c;
c.setToDefault();
c.parseFromText(<span class="pl-s"><span class="pl-pds">"</span>*GLOBAL:<span class="pl-cce">\n</span> FORMAT = %level %msg<span class="pl-pds">"</span></span>);</pre></div>

<blockquote>
<p>Above code only sets Configurations object, you still need to re-configure logger/s using this configurations.</p>
</blockquote>

<p><a href="#table-of-contents"><img src="easyloggingpp_README_files/up.png" alt="top" style="max-width:100%;"> Goto Top</a></p>

<h3><a id="user-content-default-configurations" class="anchor" href="#default-configurations" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Default Configurations</h3>

<p>If you wish to have a configuration for existing and future loggers, you can use <code>el::Loggers::setDefaultConfigurations(el::Configurations&amp; configurations, bool configureExistingLoggers = false)</code>.
 This is useful when you are working on fairly large scale, or using a 
third-party library that is already using Easylogging++. Any newly 
created logger will use default configurations. If you wish to configure
 existing loggers as well, you can set second argument to <code>true</code> (it defaults to <code>false</code>).</p>

<p><a href="#table-of-contents"><img src="easyloggingpp_README_files/up.png" alt="top" style="max-width:100%;"> Goto Top</a></p>

<h3><a id="user-content-global-configurations" class="anchor" href="#global-configurations" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Global Configurations</h3>

<p><code>Level::Global</code> is nothing to do with global 
configurations, it is concept where you can register configurations for 
all/or some loggers and even register new loggers using configuration 
file. Syntax of configuration file is:</p>

<pre><code>-- LOGGER ID ## Case sensitive
  ## Everything else is same as configuration file


-- ANOTHER LOGGER ID
  ## Configuration for this logger
</code></pre>

<p>Logger ID starts with two dashes. Once you have written your global 
configuration file you can configure your all loggers (and register new 
ones) using single function;</p>

<div class="highlight highlight-source-c++"><pre><span class="pl-k">int</span> <span class="pl-en">main</span>(<span class="pl-k">void</span>) {
   <span class="pl-c"><span class="pl-c">//</span> Registers new and configures it or</span>
   <span class="pl-c"><span class="pl-c">//</span> configures existing logger - everything in global.conf</span>
   <span class="pl-c1">el::Loggers::configureFromGlobal</span>(<span class="pl-s"><span class="pl-pds">"</span>global.conf<span class="pl-pds">"</span></span>);
   <span class="pl-c"><span class="pl-c">//</span> .. Your prog</span>
   <span class="pl-k">return</span> <span class="pl-c1">0</span>;
}</pre></div>

<p>Please note, it is not possible to register new logger using global 
configuration without defining its configuration. You must define at 
least single configuration. Other ways to register loggers are discussed
 in <a href="#logging">Logging</a> section below.</p>

<p><a href="#table-of-contents"><img src="easyloggingpp_README_files/up.png" alt="top" style="max-width:100%;"> Goto Top</a></p>

<h3><a id="user-content-logging-format-specifiers" class="anchor" href="#logging-format-specifiers" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Logging Format Specifiers</h3>

<p>You can customize format of logging using following specifiers:</p>

<table><thead>
<tr>
<th>Specifier</th>
<th>Replaced By</th>
</tr>
</thead><tbody>
<tr>
<td><code>%logger</code></td>
<td>Logger ID</td>
</tr>
<tr>
<td><code>%thread</code></td>
<td>Thread ID - Uses std::thread if available, otherwise GetCurrentThreadId() on windows</td>
</tr>
<tr>
<td><code>%level</code></td>
<td>Severity level (Info, Debug, Error, Warning, Fatal, Verbose, Trace)</td>
</tr>
<tr>
<td><code>%levshort</code></td>
<td>Severity level (Short version i.e, I for Info and respectively D, E, W, F, V, T)</td>
</tr>
<tr>
<td><code>%vlevel</code></td>
<td>Verbosity level (Applicable to verbose logging)</td>
</tr>
<tr>
<td><code>%datetime</code></td>
<td>Date and/or time - Pattern is customizable - see Date/Time Format Specifiers below</td>
</tr>
<tr>
<td><code>%user</code></td>
<td>User currently running application</td>
</tr>
<tr>
<td><code>%host</code></td>
<td>Computer name application is running on</td>
</tr>
<tr>
<td><code>%file</code>*</td>
<td>File name of source file (Full path) - This feature is subject to availability of <code>__FILE__</code> macro of compiler</td>
</tr>
<tr>
<td><code>%fbase</code>*</td>
<td>File name of source file (Only base name)</td>
</tr>
<tr>
<td><code>%line</code>*</td>
<td>Source line number - This feature is subject to availability of <code>__LINE__</code> macro of compile</td>
</tr>
<tr>
<td><code>%func</code>*</td>
<td>Logging function</td>
</tr>
<tr>
<td><code>%loc</code>*</td>
<td>Source filename and line number of logging (separated by colon)</td>
</tr>
<tr>
<td><code>%msg</code></td>
<td>Actual log message</td>
</tr>
<tr>
<td><code>%</code></td>
<td>Escape character (e.g, %%level will write %level)</td>
</tr>
</tbody></table>

<ul>
<li>Subject to compiler's availability of certain macros, e.g, <code>__LINE__</code>, <code>__FILE__</code> etc </li>
</ul>

<p>You can also specify your own format specifiers. In order to do that you can use <code>el::Helpers::installCustomFormatSpecifier</code>. A perfect example is <code>%ip_addr</code> for TCP server application;</p>

<div class="highlight highlight-source-c++"><pre><span class="pl-k">const</span> <span class="pl-k">char</span>* <span class="pl-en">getIp</span>(<span class="pl-k">void</span>) {
    <span class="pl-k">return</span> <span class="pl-s"><span class="pl-pds">"</span>192.168.1.1<span class="pl-pds">"</span></span>;
}

<span class="pl-k">int</span> <span class="pl-en">main</span>(<span class="pl-k">void</span>) {
    <span class="pl-c1">el::Helpers::installCustomFormatSpecifier</span>(<span class="pl-c1">el::CustomFormatSpecifier</span>(<span class="pl-s"><span class="pl-pds">"</span>%ip_addr<span class="pl-pds">"</span></span>, getIp));
    <span class="pl-c1">el::Loggers::reconfigureAllLoggers</span>(el::ConfigurationType::Format, <span class="pl-s"><span class="pl-pds">"</span>%datetime %level %ip_addr : %msg<span class="pl-pds">"</span></span>);
    <span class="pl-c1">LOG</span>(INFO) &lt;&lt; <span class="pl-s"><span class="pl-pds">"</span>This is request from client<span class="pl-pds">"</span></span>;
    <span class="pl-k">return</span> <span class="pl-c1">0</span>;
}</pre></div>

<p><a href="#table-of-contents"><img src="easyloggingpp_README_files/up.png" alt="top" style="max-width:100%;"> Goto Top</a></p>

<h3><a id="user-content-datetime-format-specifiers" class="anchor" href="#datetime-format-specifiers" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Date/Time Format Specifiers</h3>

<p>You can customize date/time format using following specifiers</p>

<table><thead>
<tr>
<th>Specifier</th>
<th>Replaced By</th>
</tr>
</thead><tbody>
<tr>
<td><code>%d</code></td>
<td>Day of month (zero-padded)</td>
</tr>
<tr>
<td><code>%a</code></td>
<td>Day of the week - short (Mon, Tue, Wed, Thu, Fri, Sat, Sun)</td>
</tr>
<tr>
<td><code>%A</code></td>
<td>Day of the week - long (Monday, Tuesday, Wednesday, Thursday, Friday, Saturday, Sunday)</td>
</tr>
<tr>
<td><code>%M</code></td>
<td>Month (zero-padded)</td>
</tr>
<tr>
<td><code>%b</code></td>
<td>Month - short (Jan, Feb, Mar, Apr, May, Jun, Jul, Aug, Sep, Oct, Nov, Dec)</td>
</tr>
<tr>
<td><code>%B</code></td>
<td>Month - Long (January, February, March, April, May, June, July, August, September, October, November, December)</td>
</tr>
<tr>
<td><code>%y</code></td>
<td>Year - Two digit (13, 14 etc)</td>
</tr>
<tr>
<td><code>%Y</code></td>
<td>Year - Four digit (2013, 2014 etc)</td>
</tr>
<tr>
<td><code>%h</code></td>
<td>Hour (12-hour format)</td>
</tr>
<tr>
<td><code>%H</code></td>
<td>Hour (24-hour format)</td>
</tr>
<tr>
<td><code>%m</code></td>
<td>Minute (zero-padded)</td>
</tr>
<tr>
<td><code>%s</code></td>
<td>Second (zero-padded)</td>
</tr>
<tr>
<td><code>%g</code></td>
<td>Subsecond part (precision is configured by ConfigurationType::SubsecondPrecision)</td>
</tr>
<tr>
<td><code>%F</code></td>
<td>AM/PM designation</td>
</tr>
<tr>
<td><code>%</code></td>
<td>Escape character</td>
</tr>
</tbody></table>

<p>Please note, date/time is limited to <code>30</code> characters at most.</p>

<p><a href="#table-of-contents"><img src="easyloggingpp_README_files/up.png" alt="top" style="max-width:100%;"> Goto Top</a></p>

<h3><a id="user-content-logging-flags" class="anchor" href="#logging-flags" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Logging Flags</h3>

<p>Form some parts of logging you can set logging flags; here are flags supported:</p>

<table><thead>
<tr>
<th>Flag</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td><code>NewLineForContainer (1)</code></td>
<td>Makes sure we have new line for each container log entry</td>
</tr>
<tr>
<td><code>AllowVerboseIfModuleNotSpecified (2)</code></td>
<td>Makes sure if -vmodule is used and does not specifies a module, then
 verbose logging is allowed via that module. Say param was 
-vmodule=main*=3 and a verbose log is being written from a file called 
something.cpp then if this flag is enabled, log will be written 
otherwise it will be disallowed. Note: having this defeats purpose of 
-vmodule</td>
</tr>
<tr>
<td><code>LogDetailedCrashReason (4)</code></td>
<td>When handling crashes by default, detailed crash reason will be logged as well (Disabled by default) (<a href="https://github.com/easylogging/easyloggingpp/issues/90">issue #90</a>)</td>
</tr>
<tr>
<td><code>DisableApplicationAbortOnFatalLog (8)</code></td>
<td>Allows to disable application abortion when logged using FATAL 
level. Note that this does not apply to default crash handlers as 
application should be aborted after crash signal is handled. (Not added 
by default) (<a href="https://github.com/easylogging/easyloggingpp/issues/119">issue #119</a>)</td>
</tr>
<tr>
<td><code>ImmediateFlush (16)</code></td>
<td>Flushes log with every log-entry (performance sensative) - Disabled by default</td>
</tr>
<tr>
<td><code>StrictLogFileSizeCheck (32)</code></td>
<td>Makes sure log file size is checked with every log</td>
</tr>
<tr>
<td><code>ColoredTerminalOutput (64)</code></td>
<td>Terminal output will be colorful if supported by terminal.</td>
</tr>
<tr>
<td><code>MultiLoggerSupport (128)</code></td>
<td>Enables support for using multiple loggers to log single message. (E.g, <code>CLOG(INFO, "default", "network") &lt;&lt; This will be logged using default and network loggers;</code>)</td>
</tr>
<tr>
<td><code>DisablePerformanceTrackingCheckpointComparison (256)</code></td>
<td>Disables checkpoint comparison</td>
</tr>
<tr>
<td><code>DisableVModules (512)</code></td>
<td>Disables usage of vmodules</td>
</tr>
<tr>
<td><code>DisableVModulesExtensions (1024)</code></td>
<td>Disables vmodules extension. This means if you have a vmodule 
-vmodule=main*=4 it will cover everything starting with main, where as 
if you do not have this defined you will be covered for any file 
starting with main and ending with one of the following extensions; .h 
.c .cpp .cc .cxx .-inl-.h .hxx .hpp. Please note following vmodule is 
not correct -vmodule=main.=4 with this macro not defined because this 
will check for main..c, notice double dots. If you want this to be 
valid, have a look at logging flag above: 
AllowVerboseIfModuleNotSpecified '?' and '' wildcards are supported</td>
</tr>
<tr>
<td><code>HierarchicalLogging (2048)</code></td>
<td>Enables hierarchical logging. This is not applicable to verbose logging.</td>
</tr>
<tr>
<td><code>CreateLoggerAutomatically (4096)</code></td>
<td>Creates logger automatically when not available.</td>
</tr>
<tr>
<td><code>AutoSpacing (8192)</code></td>
<td>Automatically adds spaces. E.g, <code>LOG(INFO) &lt;&lt; "DODGE" &lt;&lt; "THIS!";</code> will output "DODGE THIS!"</td>
</tr>
<tr>
<td><code>FixedTimeFormat (16384)</code></td>
<td>Applicable to performace tracking only - this prevents formatting time. E.g, <code>1001 ms</code> will be logged as is, instead of formatting it as <code>1.01 sec</code></td>
</tr>
</tbody></table>

<p>You can set/unset these flags by using static <code>el::Loggers::addFlag</code> and <code>el::Loggers::removeFlag</code>. You can check to see if certain flag is available by using <code>el::Loggers::hasFlag</code>, all these functions take strongly-typed enum <code>el::LoggingFlag</code></p>

<blockquote>
<p>You can set these flags by using <code>--logging-flags</code> command line arg. You need to enable this functionality by defining macro <code>ELPP_LOGGING_FLAGS_FROM_ARG</code> (You will need to make sure to use <code>START_EASYLOGGINGPP(argc, argv)</code> to configure arguments).</p>

<p>You can also set default (initial) flags using <code>ELPP_DEFAULT_LOGGING_FLAGS</code> and set numerical value for initial flags</p>
</blockquote>

<p><a href="#table-of-contents"><img src="easyloggingpp_README_files/up.png" alt="top" style="max-width:100%;"> Goto Top</a></p>

<h3><a id="user-content-application-arguments" class="anchor" href="#application-arguments" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Application Arguments</h3>

<p>Following table will explain all command line arguments that you may 
use to define certain behaviour; You will need to initialize application
 arguments by using <code>START_EASYLOGGINGPP(argc, argv)</code> in your <code>main(int, char**)</code> function.</p>

<table><thead>
<tr>
<th>Argument</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td><code>-v</code></td>
<td>Activates maximum verbosity</td>
</tr>
<tr>
<td><code>--v=2</code></td>
<td>Activates verbosity upto verbose level 2 (valid range: 0-9)</td>
</tr>
<tr>
<td><code>--verbose</code></td>
<td>Activates maximum verbosity</td>
</tr>
<tr>
<td><code>-vmodule=MODULE_NAME</code></td>
<td>Activates verbosity for files starting with main to level 1, the rest of the files depend on logging flag <code>AllowVerboseIfModuleNotSpecified</code>
 Please see Logging Flags section above. Two modules can be separated by
 comma. Please note vmodules are last in order of precedence of checking
 arguments for verbose logging, e.g, if we have -v in application 
arguments before vmodules, vmodules will be ignored.</td>
</tr>
<tr>
<td><code>--logging-flags=3</code></td>
<td>Sets logging flag. In example <code>i.e, 3</code>, it sets logging flag to <code>NewLineForContainer</code> and <code>AllowVerboseIfModuleNotSpecified</code>. See logging flags section above for further details and values. See macros section to disable this function.</td>
</tr>
<tr>
<td><code>--default-log-file=FILE</code></td>
<td>Sets default log file for existing and future loggers. You may want to consider defining <code>ELPP_NO_DEFAULT_LOG_FILE</code> to prevent creation of default empty log file during pre-processing. See macros section to disable this function.</td>
</tr>
</tbody></table>

<p><a href="#table-of-contents"><img src="easyloggingpp_README_files/up.png" alt="top" style="max-width:100%;"> Goto Top</a></p>

<h3><a id="user-content-configuration-macros" class="anchor" href="#configuration-macros" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Configuration Macros</h3>

<p>Some of logging options can be set by macros, this is a thoughtful decision, for example if we have <code>ELPP_THREAD_SAFE</code>
 defined, all the thread-safe functionalities are enabled otherwise 
disabled (making sure over-head of thread-safety goes with it). To make 
it easy to remember and prevent possible conflicts, all the macros start
 with <code>ELPP_</code></p>

<p>NOTE: All the macros either need to be defined before <code>#include "easylogging++"</code> - but this gets hard and unreadable if project is getting bigger so we recommend you define all these macros using <code>-D</code> option of compiler, for example in case of <code>g++</code> you will do <code>g++ source.cpp ... -DELPP_SYSLOG -DELPP_THREAD_SAFE ...</code></p>

<table><thead>
<tr>
<th>Macro Name</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td><code>ELPP_DEBUG_ASSERT_FAILURE</code></td>
<td>Aborts application on first assertion failure. This assertion is due to invalid input e.g, invalid configuration file etc.</td>
</tr>
<tr>
<td><code>ELPP_UNICODE</code></td>
<td>Enables Unicode support when logging. Requires <code>START_EASYLOGGINGPP</code></td>
</tr>
<tr>
<td><code>ELPP_THREAD_SAFE</code></td>
<td>Enables thread-safety - make sure -lpthread linking for linux.</td>
</tr>
<tr>
<td><code>ELPP_FORCE_USE_STD_THREAD</code></td>
<td>Forces to use C++ standard library for threading (Only useful when using <code>ELPP_THREAD_SAFE</code></td>
</tr>
<tr>
<td><code>ELPP_FEATURE_CRASH_LOG</code></td>
<td>Applicable to GCC only. Enables stacktrace on application crash</td>
</tr>
<tr>
<td><code>ELPP_DISABLE_DEFAULT_CRASH_HANDLING</code></td>
<td>Disables default crash handling. You can use el::Helpers::setCrashHandler to use your own handler.</td>
</tr>
<tr>
<td><code>ELPP_DISABLE_LOGS</code></td>
<td>Disables all logs - (preprocessing)</td>
</tr>
<tr>
<td><code>ELPP_DISABLE_DEBUG_LOGS</code></td>
<td>Disables debug logs - (preprocessing)</td>
</tr>
<tr>
<td><code>ELPP_DISABLE_INFO_LOGS</code></td>
<td>Disables info logs - (preprocessing)</td>
</tr>
<tr>
<td><code>ELPP_DISABLE_WARNING_LOGS</code></td>
<td>Disables warning logs - (preprocessing)</td>
</tr>
<tr>
<td><code>ELPP_DISABLE_ERROR_LOGS</code></td>
<td>Disables error logs - (preprocessing)</td>
</tr>
<tr>
<td><code>ELPP_DISABLE_FATAL_LOGS</code></td>
<td>Disables fatal logs - (preprocessing)</td>
</tr>
<tr>
<td><code>ELPP_DISABLE_VERBOSE_LOGS</code></td>
<td>Disables verbose logs - (preprocessing)</td>
</tr>
<tr>
<td><code>ELPP_DISABLE_TRACE_LOGS</code></td>
<td>Disables trace logs - (preprocessing)</td>
</tr>
<tr>
<td><code>ELPP_FORCE_ENV_VAR_FROM_BASH</code></td>
<td>If environment variable could not be found, force using alternative bash command to find value, e.g, <code>whoami</code> for username. (DO NOT USE THIS MACRO WITH <code>LD_PRELOAD</code> FOR LIBRARIES THAT ARE ALREADY USING Easylogging++ OR YOU WILL END UP IN STACK OVERFLOW FOR PROCESSES (<code>popen</code>) (see <a href="https://github.com/easylogging/easyloggingpp/issues/87">issue #87</a> for details))</td>
</tr>
<tr>
<td><code>ELPP_DEFAULT_LOG_FILE</code></td>
<td>Full filename where you want initial files to be created. You need to embed value of this macro with quotes, e.g, <code>-DELPP_DEFAULT_LOG_FILE='"logs/el.gtest.log"'</code> Note the double quotes inside single quotes, double quotes are the values for <code>const char*</code> and single quotes specifies value of macro</td>
</tr>
<tr>
<td><code>ELPP_NO_DEFAULT_LOG_FILE</code></td>
<td>If you dont want to initialize library with default log file, define
 this macro. But be sure to configure your logger with propery log 
filename or you will end up getting heaps of errors when trying to log 
to file (and <code>TO_FILE</code> is configured to <code>true</code>)</td>
</tr>
<tr>
<td><code>ELPP_FRESH_LOG_FILE</code></td>
<td>Never appends log file whenever log file is created (Use with care as it may cause some unexpected result for some users)</td>
</tr>
<tr>
<td><code>ELPP_DEBUG_ERRORS</code></td>
<td>If you wish to find out internal errors raised by Easylogging++ that
 can be because of configuration or something else, you can enable them 
by defining this macro. You will get your errors on standard output i.e,
 terminal or command prompt.</td>
</tr>
<tr>
<td><code>ELPP_DISABLE_CUSTOM_FORMAT_SPECIFIERS</code></td>
<td>Forcefully disables custom format specifiers</td>
</tr>
<tr>
<td><code>ELPP_DISABLE_LOGGING_FLAGS_FROM_ARG</code></td>
<td>Forcefully disables ability to set logging flags using command-line arguments</td>
</tr>
<tr>
<td><code>ELPP_DISABLE_LOG_FILE_FROM_ARG</code></td>
<td>Forcefully disables ability to set default log file from command-line arguments</td>
</tr>
<tr>
<td><code>ELPP_WINSOCK2</code></td>
<td>On windows system force to use <code>winsock2.h</code> instead of <code>winsock.h</code> when <code>WIN32_LEAN_AND_MEAN</code> is defined</td>
</tr>
<tr>
<td><code>ELPP_CUSTOM_COUT</code> (advanced)</td>
<td>Resolves to a value e.g, <code>#define ELPP_CUSTOM_COUT qDebug()</code> or <code>#define ELPP_CUSTOM_COUT std::cerr</code>. This will use the value for standard output (instead of using <code>std::cout</code></td>
</tr>
<tr>
<td><code>ELPP_CUSTOM_COUT_LINE</code> (advanced)</td>
<td>Used with <code>ELPP_CUSTOM_COUT</code> to define how to write a log line with custom cout. e.g, <code>#define ELPP_CUSTOM_COUT_LINE(msg) QString::fromStdString(msg).trimmed()</code></td>
</tr>
</tbody></table>

<p><a href="#table-of-contents"><img src="easyloggingpp_README_files/up.png" alt="top" style="max-width:100%;"> Goto Top</a></p>

<h3><a id="user-content-reading-configurations" class="anchor" href="#reading-configurations" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Reading Configurations</h3>

<p>If you wish to read configurations of certain logger, you can do so by using <code>typedConfigurations()</code> function in Logger class.</p>

<div class="highlight highlight-source-c++"><pre>el::Logger* l = el::Loggers::getLogger(<span class="pl-s"><span class="pl-pds">"</span>default<span class="pl-pds">"</span></span>);
<span class="pl-k">bool</span> enabled = l-&gt;<span class="pl-en">typedConfigurations</span>()-&gt;enabled(el::Level::Info);
<span class="pl-c"><span class="pl-c">//</span> Or to read log format/pattern</span>
std::string format = 
        l-&gt;<span class="pl-en">typedConfigurations</span>()-&gt;logFormat(el::Level::Info).format();</pre></div>

<p><a href="#table-of-contents"><img src="easyloggingpp_README_files/up.png" alt="top" style="max-width:100%;"> Goto Top</a></p>

<h1><a id="user-content-logging" class="anchor" href="#logging" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Logging</h1>

<p>Logging in easylogging++ is done using collection of macros. This is 
to make it easier for user and to prevent them knowing about unnecessary
 greater details of how things are done.</p>

<h3><a id="user-content-basic" class="anchor" href="#basic" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Basic</h3>

<p>You are provided with two basic macros that you can use in order to write logs:</p>

<ul>
<li><code>LOG(LEVEL)</code></li>
<li><code>CLOG(LEVEL, logger ID)</code></li>
</ul>

<p><code>LOG</code> uses 'default' logger while in CLOG (Custom LOG) you
 specify the logger ID. For LEVELs please refer to Configurations - 
Levels section above. Different loggers might have different 
configurations depending on your need, you may as well write custom 
macro to access custom logger. You also have different macros for 
verbose logging that is explained in section below.
Here is very simple example of using these macros after you have 
initialized easylogging++.</p>

<div class="highlight highlight-source-c++"><pre><span class="pl-en">LOG</span>(INFO) &lt;&lt; "This is info log";
<span class="pl-en">CLOG</span>(ERROR, <span class="pl-s"><span class="pl-pds">"</span>performance<span class="pl-pds">"</span></span>) &lt;&lt; "This is info log using performance logger";</pre></div>

<p>There is another way to use same macro i.e, <code>LOG</code> (and associated macros). This is that you define macro <code>ELPP_DEFAULT_LOGGER</code> and <code>ELPP_CURR_FILE_PERFORMANCE_LOGGER_ID</code> with logger ID that is already registered, and now when you use <code>LOG</code> macro, it automatically will use specified logger instead of <code>default</code>
 logger. Please note that this should be defined in source file instead 
of header file. This is so that when we include header we dont 
accidently use invalid logger.</p>

<p>A quick example is here</p>

<div class="highlight highlight-source-c++"><pre>#<span class="pl-k">ifndef</span> ELPP_DEFAULT_LOGGER
#   <span class="pl-k">define</span> <span class="pl-en">ELPP_DEFAULT_LOGGER</span> <span class="pl-s"><span class="pl-pds">"</span>update_manager<span class="pl-pds">"</span></span>
#<span class="pl-k">endif</span>
#<span class="pl-k">ifndef</span> ELPP_CURR_FILE_PERFORMANCE_LOGGER_ID
#   <span class="pl-k">define</span> <span class="pl-en">ELPP_CURR_FILE_PERFORMANCE_LOGGER_ID</span> ELPP_DEFAULT_LOGGER
#<span class="pl-k">endif</span>
#<span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">"</span>easylogging++.h<span class="pl-pds">"</span></span>
UpdateManager::UpdateManager {
    _TRACE; <span class="pl-c"><span class="pl-c">//</span> Logs using LOG(TRACE) provided logger is already registered - i.e, update_manager</span>
    <span class="pl-c1">LOG</span>(INFO) &lt;&lt; <span class="pl-s"><span class="pl-pds">"</span>This will log using update_manager logger as well<span class="pl-pds">"</span></span>;
}</pre></div>

<div class="highlight highlight-source-c++"><pre>#<span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">"</span>easylogging++.h<span class="pl-pds">"</span></span>
UpdateManager::UpdateManager {
    _TRACE; <span class="pl-c"><span class="pl-c">//</span> Logs using LOG(TRACE) using default logger because no `ELPP_DEFAULT_LOGGER` is defined unless you have it in makefile</span>
}</pre></div>

<blockquote>
<p>You can also write logs by using <code>Logger</code> class directly. This feature is available on compilers that support variadic templates. You can explore more by looking at <code>samples/STL/logger-log-functions.cpp</code>.</p>
</blockquote>

<p><a href="#table-of-contents"><img src="easyloggingpp_README_files/up.png" alt="top" style="max-width:100%;"> Goto Top</a></p>

<h3><a id="user-content-conditional-logging" class="anchor" href="#conditional-logging" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Conditional Logging</h3>

<p>Easylogging++ provides certain aspects of logging, one these aspects 
is conditional logging, i.e, log will be written only if certain 
condition fulfils. This comes very handy in some situations. 
Helper macros end with _IF;</p>

<ul>
<li><code>LOG_IF(condition, LEVEL)</code></li>
<li><code>CLOG_IF(condition, LEVEL, logger ID)</code></li>
</ul>

<h4><a id="user-content-some-examples" class="anchor" href="#some-examples" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Some examples:</h4>

<div class="highlight highlight-source-c++"><pre><span class="pl-en">LOG_IF</span>(condition, INFO) &lt;&lt; "Logged if condition is true";

<span class="pl-en">LOG_IF</span>(<span class="pl-c1">false</span>, WARNING) &lt;&lt; "Never logged";
<span class="pl-en">CLOG_IF</span>(<span class="pl-c1">true</span>, INFO, <span class="pl-s"><span class="pl-pds">"</span>performance<span class="pl-pds">"</span></span>) &lt;&lt; "Always logged (performance logger)"</pre></div>

<p>Same macros are available for verbose logging with <code>V</code> in the beginning, i.e, <code>VLOG_IF</code> and <code>CVLOG_IF</code>.
 see verbose logging section below for further information. You may have
 as complicated conditions as you want depending on your need.</p>

<p><a href="#table-of-contents"><img src="easyloggingpp_README_files/up.png" alt="top" style="max-width:100%;"> Goto Top</a></p>

<h3><a id="user-content-occasional-logging" class="anchor" href="#occasional-logging" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Occasional Logging</h3>

<p>Occasional logging is another useful aspect of logging with 
Easylogging++. This means a log will be written if it's hit certain 
times or part of certain times, e.g, every 10th hit or 100th hit or 2nd 
hit.
Helper macros end with <code>_EVERY_N</code>;</p>

<ul>
<li><code>LOG_EVERY_N(n, LEVEL)</code></li>
<li><code>CLOG_EVERY_N(n, LEVEL, logger ID)</code></li>
</ul>

<h4><a id="user-content-other-hit-counts-based-logging" class="anchor" href="#other-hit-counts-based-logging" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Other Hit Counts Based Logging</h4>

<p>There are some other ways of logging as well based on hit counts. These useful macros are</p>

<ul>
<li><code>LOG_AFTER_N(n, LEVEL)</code>; Only logs when we have reached hit counts of <code>n</code></li>
<li><code>LOG_N_TIMES(n, LEVEL)</code>; Logs n times</li>
</ul>

<h4><a id="user-content-some-examples-1" class="anchor" href="#some-examples-1" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Some examples:</h4>

<div class="highlight highlight-source-c++"><pre><span class="pl-k">for</span> (<span class="pl-k">int</span> i = <span class="pl-c1">1</span>; i &lt;= <span class="pl-c1">10</span>; ++i) {
   <span class="pl-c1">LOG_EVERY_N</span>(<span class="pl-c1">2</span>, INFO) &lt;&lt; <span class="pl-s"><span class="pl-pds">"</span>Logged every second iter<span class="pl-pds">"</span></span>;
}
<span class="pl-c"><span class="pl-c">//</span> 5 logs written; 2, 4, 6, 7, 10</span>

<span class="pl-k">for</span> (<span class="pl-k">int</span> i = <span class="pl-c1">1</span>; i &lt;= <span class="pl-c1">10</span>; ++i) {
   <span class="pl-c1">LOG_AFTER_N</span>(<span class="pl-c1">2</span>, INFO) &lt;&lt; <span class="pl-s"><span class="pl-pds">"</span>Log after 2 hits; <span class="pl-pds">"</span></span> &lt;&lt; i;
}
<span class="pl-c"><span class="pl-c">//</span> 8 logs written; 3, 4, 5, 6, 7, 8, 9, 10</span>

<span class="pl-k">for</span> (<span class="pl-k">int</span> i = <span class="pl-c1">1</span>; i &lt;= <span class="pl-c1">100</span>; ++i) {
   <span class="pl-c1">LOG_N_TIMES</span>(<span class="pl-c1">3</span>, INFO) &lt;&lt; <span class="pl-s"><span class="pl-pds">"</span>Log only 3 times; <span class="pl-pds">"</span></span> &lt;&lt; i;
}
<span class="pl-c"><span class="pl-c">//</span> 3 logs writter; 1, 2, 3</span></pre></div>

<blockquote>
<p>Same versions of macros are available for <code>DEBUG</code> only mode, these macros start with <code>D</code> (for debug) followed by the same name. e.g, <code>DLOG</code> to log only in debug mode (i.e, when <code>_DEBUG</code> is defined or <code>NDEBUG</code> is undefined)</p>
</blockquote>

<p><a href="#table-of-contents"><img src="easyloggingpp_README_files/up.png" alt="top" style="max-width:100%;"> Goto Top</a></p>

<h3><a id="user-content-printf-like-logging" class="anchor" href="#printf-like-logging" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a><code>printf</code> Like Logging</h3>

<p>For compilers that support C++11's variadic templates, ability to log like "printf" is available. This is done by using <code>Logger</code> class. This feature is thread and type safe (as we do not use any macros like <code>LOG(INFO)</code> etc)</p>

<p>This is done in two steps:</p>

<ol>
<li>Pulling registered logger using <code>el::Loggers::getLogger(&lt;logger_id&gt;);</code></li>
<li>Using one of logging functions</li>
</ol>

<p>The only difference from <code>printf</code> is that logging using these functions require <code>%v</code> for each arg (This is for type-safety); instead of custom format specifiers. You can escape this by <code>%%v</code></p>

<p>Following are various function signatures:</p>

<ul>
<li><code>info(const char*, const T&amp;, const Args&amp;...)</code></li>
<li><code>warn(const char*, const T&amp;, const Args&amp;...)</code></li>
<li><code>error(const char*, const T&amp;, const Args&amp;...)</code></li>
<li><code>debug(const char*, const T&amp;, const Args&amp;...)</code></li>
<li><code>fatal(const char*, const T&amp;, const Args&amp;...)</code></li>
<li><code>trace(const char*, const T&amp;, const Args&amp;...)</code></li>
<li><code>verbose(int vlevel, const char*, const T&amp;, const Args&amp;...)</code></li>
</ul>

<h4><a id="user-content-simple-example" class="anchor" href="#simple-example" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Simple example:</h4>

<div class="highlight highlight-source-c++"><pre><span class="pl-c"><span class="pl-c">//</span> Use default logger</span>
el::Logger* defaultLogger = el::Loggers::getLogger(<span class="pl-s"><span class="pl-pds">"</span>default<span class="pl-pds">"</span></span>);

<span class="pl-c"><span class="pl-c">//</span> STL logging (`ELPP_STL_LOGGING` should be defined)</span>
std::vector&lt;<span class="pl-k">int</span>&gt; i;
i.push_back(<span class="pl-c1">1</span>);
defaultLogger-&gt;<span class="pl-en">warn</span>(<span class="pl-s"><span class="pl-pds">"</span>My first ultimate log message %v %v %v<span class="pl-pds">"</span></span>, <span class="pl-c1">123</span>, <span class="pl-c1">222</span>, i);

<span class="pl-c"><span class="pl-c">//</span> Escaping</span>
defaultLogger-&gt;<span class="pl-en">info</span>(<span class="pl-s"><span class="pl-pds">"</span>My first ultimate log message %% %%v %v %v<span class="pl-pds">"</span></span>, <span class="pl-c1">123</span>, <span class="pl-c1">222</span>);
</pre></div>

<blockquote>
<p><code>%file</code>, <code>%func</code> <code>%line</code> and <code>%loc</code> format specifiers will not work with <code>printf</code> like logging.</p>
</blockquote>

<p><a href="#table-of-contents"><img src="easyloggingpp_README_files/up.png" alt="top" style="max-width:100%;"> Goto Top</a></p>

<h3><a id="user-content-verbose-logging" class="anchor" href="#verbose-logging" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Verbose Logging</h3>

<h4><a id="user-content-basic-1" class="anchor" href="#basic-1" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Basic</h4>

<p>Verbose logging is useful in every software to record more 
information than usual. Very useful for troubleshooting. Following are 
verbose logging specific macros;</p>

<ul>
<li><code>VLOG(verbose-level)</code></li>
<li><p><code>CVLOG(verbose-level, logger ID)</code></p>

<p><a href="#table-of-contents"><img src="easyloggingpp_README_files/up.png" alt="top" style="max-width:100%;"> Goto Top</a></p></li>
</ul>

<h4><a id="user-content-conditional-and-occasional-logging" class="anchor" href="#conditional-and-occasional-logging" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Conditional and Occasional Logging</h4>

<p>Verbose logging also has conditional and occasional logging aspects i.e,</p>

<ul>
<li><code>VLOG_IF(condition, verbose-level)</code></li>
<li><code>CVLOG_IF(condition, verbose-level, loggerID)</code></li>
<li><code>VLOG_EVERY_N(n, verbose-level)</code></li>
<li><code>CVLOG_EVERY_N(n, verbose-level, loggerID)</code></li>
<li><code>VLOG_AFTER_N(n, verbose-level)</code></li>
<li><code>CVLOG_AFTER_N(n, verbose-level, loggerID)</code></li>
<li><code>VLOG_N_TIMES(n, verbose-level)</code></li>
<li><p><code>CVLOG_N_TIMES(n, verbose-level, loggerID)</code></p>

<p><a href="#table-of-contents"><img src="easyloggingpp_README_files/up.png" alt="top" style="max-width:100%;"> Goto Top</a></p></li>
</ul>

<h4><a id="user-content-verbose-level" class="anchor" href="#verbose-level" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Verbose-Level</h4>

<p>Verbose level is level of verbosity that can have range of 1-9. 
Verbose level will not be active unless you either set application 
arguments for it. Please read through <a href="#application-arguments">Application Arguments</a> section to understand more about verbose logging.</p>

<p>In order to change verbose level on the fly, please use <code>Loggers::setVerboseLevel(base::type::VerboseLevel)</code> aka <code>Loggers::setVerboseLevel(int)</code> function. (You can check current verbose level by <code>Loggers::verboseLevel()</code></p>

<p><a href="#table-of-contents"><img src="easyloggingpp_README_files/up.png" alt="top" style="max-width:100%;"> Goto Top</a></p>

<h4><a id="user-content-check-if-verbose-logging-is-on" class="anchor" href="#check-if-verbose-logging-is-on" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Check If Verbose Logging Is On</h4>

<p>You can use a macro <code>VLOG_IS_ON(verbose-level)</code> to check 
to see if certain logging is on for source file for specified verbose 
level. This returns boolean that you can embed into if condition.</p>

<div class="highlight highlight-source-c++"><pre><span class="pl-k">if</span> (VLOG_IS_ON(<span class="pl-c1">2</span>)) {
   <span class="pl-c"><span class="pl-c">//</span> Verbosity level 2 is on for this file</span>
}</pre></div>

<p><a href="#table-of-contents"><img src="easyloggingpp_README_files/up.png" alt="top" style="max-width:100%;"> Goto Top</a></p>

<h4><a id="user-content-vmodule" class="anchor" href="#vmodule" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>VModule</h4>

<p>VModule is functionality for verbose logging (as mentioned in above 
table) where you can specify verbosity by modules/source file. Following
 are some examples with explanation; Any of vmodule below starts with <code>-vmodule=</code> and <code>LoggingFlag::DisableVModulesExtensions</code> flag not set. Vmodule can completely be disabled by adding flag <code>LoggingFlag::DisableVModules</code></p>

<p>Example with <code>LoggingFlag::AllowVerboseIfModuleNotSpecified</code> flag;</p>

<p><code>main=3,parser*=4</code>:</p>

<ul>
<li>A bad example but good enough for explanation;</li>
<li>Verbosity for any following file will be allowed;
<code>main{.h, .c, .cpp, .cc, .cxx, -inl.h, .hxx, .hpp}</code>
<code>parser{.h, .c, .cpp, .cc, .cxx, -inl.h, .hxx, .hpp}</code></li>
<li>No other file will be logged for verbose level</li>
</ul>

<p>Example with no <code>LoggingFlag::AllowVerboseIfModuleNotSpecified</code> flag;</p>

<p><code>main=3,parser*=4</code>:
 Same explanation but any other file that does not fall under specified modules will have verbose logging enabled.</p>

<p>In order to change vmodules on the fly (instead of via command line args) - use <code>Loggers::setVModules(const char*)</code> where <code>const char*</code> represents the modules e.g, <code>main=3,parser*=4</code> (as per above example)</p>

<p><a href="#table-of-contents"><img src="easyloggingpp_README_files/up.png" alt="top" style="max-width:100%;"> Goto Top</a></p>

<h3><a id="user-content-registering-new-loggers" class="anchor" href="#registering-new-loggers" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Registering New Loggers</h3>

<p>Loggers are unique in logger repository by ID. You can register new logger the same way as you would get logger. Using <code>getLogger(.., ..)</code> from <code>el::Loggers</code>
 helper class. This function takes two params, first being ID and second
 being boolean (optional) to whether or not to register new logger if 
does not already exist and returns pointer to existing (or newly 
created) el::Logger class. This second param is optional and defaults to
 true. If you set it to false and logger does not exist already, it will
 return nullptr.</p>

<p>By default, Easylogging++ registers three loggers (+ an internal logger);</p>

<ul>
<li>Default logger (ID: <code>default</code>)</li>
<li>Performance logger (ID: <code>performance</code>)</li>
<li>Syslog logger (if <code>ELPP_SYSLOG</code> macro is defined) (ID: <code>syslog</code>)</li>
</ul>

<p>If you wish to register a new logger, say e.g, with ID <code>business</code></p>

<div class="highlight highlight-source-c++"><pre>el::Logger* businessLogger = el::Loggers::getLogger(<span class="pl-s"><span class="pl-pds">"</span>business<span class="pl-pds">"</span></span>);</pre></div>

<p>This will register a new logger if it does not already exist otherwise it will get an existing one. But if you have passed in <code>false</code> to the second param and logger does not already exist, <code>businessLogger</code> will be nullptr.</p>

<p>When you register a new logger, default configurations are used (see 
Default Configurations section above). Also worth noticing, logger IDs 
are case sensitive.</p>

<p><a href="#table-of-contents"><img src="easyloggingpp_README_files/up.png" alt="top" style="max-width:100%;"> Goto Top</a></p>

<h3><a id="user-content-unregister-loggers" class="anchor" href="#unregister-loggers" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Unregister Loggers</h3>

<p>You may unregister loggers; any logger except for <code>default</code>.
 You should be really careful with this function, only unregister 
loggers that you have created yourself otherwise you may end up in 
unexpected errors. For example, you dont want to unregister logger that 
is used or initialized by a third-party library and it may be using it.</p>

<p>To unregister logger, use <code>el::Loggers::unregisterLogger("logger-id")</code></p>

<p><a href="#table-of-contents"><img src="easyloggingpp_README_files/up.png" alt="top" style="max-width:100%;"> Goto Top</a></p>

<h3><a id="user-content-populating-existing-logger-ids" class="anchor" href="#populating-existing-logger-ids" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Populating Existing Logger IDs</h3>

<p>Although this is a rare situation but if you wish to get list of all the logger IDs currently in repository, you may use <code>el::Loggers::populateAllLoggerIds(std::vector&lt;std::string&gt;&amp;)</code> function to do that. The list passed in is cleared and filled up with all existing logger IDs.</p>

<p><a href="#table-of-contents"><img src="easyloggingpp_README_files/up.png" alt="top" style="max-width:100%;"> Goto Top</a></p>

<h3><a id="user-content-sharing-logging-repository" class="anchor" href="#sharing-logging-repository" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Sharing Logging Repository</h3>

<p>For advance logging, you can share your logging repositories to 
shared or static libraries, or even from library to application. This is
 rare case but a very good example is as follows;</p>

<p>Let's say we have an application that uses easylogging++ and has it's
 own configuration, now you are importing library that uses 
easylogging++ and wants to access logging repository of main 
application. You can do this using two ways;</p>

<ul>
<li>Instead of using <code>INITIALIZE_EASYLOGGINGPP</code> you use <code>SHARE_EASYLOGGINGPP(access-function-to-repository)</code></li>
<li>Instead of using <code>INITIALIZE_EASYLOGGINGPP</code> you use <code>INITIALIZE_NULL_EASYLOGGINGPP</code> and then <code>el::Helpers::setStorage(el::base::type::StoragePointer)</code></li>
</ul>

<p>After you share repository, you can reconfigure the only repository 
(i.e, the one that is used by application and library both), and use 
both to write logs. A very good example is in <code>samples/VC++/DLLSample</code></p>

<p><a href="#table-of-contents"><img src="easyloggingpp_README_files/up.png" alt="top" style="max-width:100%;"> Goto Top</a></p>

<h1><a id="user-content-extra-features" class="anchor" href="#extra-features" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Extra Features</h1>

<p>Easylogging++ is feature-rich logging library. Apart from features 
already mentioned above, here are some extra features. If code snippets 
don't make sense and further sample is needed, there are many samples 
available at github repository (samples). Feel free to browse around.</p>

<p>Some features require you to define macros (marked as prerequisite in
 each section) to enable them. This is to reduce compile time. If you 
want to enable all features you can define <code>ELPP_FEATURE_ALL</code>.</p>

<h3><a id="user-content-performance-tracking" class="anchor" href="#performance-tracking" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Performance Tracking</h3>

<p>Prerequisite: Define macro <code>ELPP_FEATURE_PERFORMANCE_TRACKING</code></p>

<p>One of the most notable features of Easylogging++ is its ability to 
track performance of your function or block of function. 
Please note, this is not backward compatible as previously we had macros
 that user must had defined in order to track performance and I am sure 
many users had avoided in doing so. (Read v8.91 ReadMe for older way of 
doing it)
The new way of tracking performance is much easier and reliable. All you
 need to do is use one of two macros from where you want to start 
tracking.</p>

<ul>
<li><code>TIMED_FUNC(obj-name)</code></li>
<li><code>TIMED_SCOPE(obj-name, block-name)</code></li>
<li><code>TIMED_BLOCK(obj-name, block-name)</code></li>
</ul>

<p>An example that just uses usleep </p>

<div class="highlight highlight-source-c++"><pre><span class="pl-k">void</span> <span class="pl-en">performHeavyTask</span>(<span class="pl-k">int</span> iter) {
   <span class="pl-c1">TIMED_FUNC</span>(timerObj);
   <span class="pl-c"><span class="pl-c">//</span> Some initializations</span>
   <span class="pl-c"><span class="pl-c">//</span> Some more heavy tasks</span>
   <span class="pl-c1">usleep</span>(<span class="pl-c1">5000</span>);
   <span class="pl-k">while</span> (iter-- &gt; <span class="pl-c1">0</span>) {
       <span class="pl-c1">TIMED_SCOPE</span>(timerBlkObj, <span class="pl-s"><span class="pl-pds">"</span>heavy-iter<span class="pl-pds">"</span></span>);
       <span class="pl-c"><span class="pl-c">//</span> Perform some heavy task in each iter</span>
       <span class="pl-c1">usleep</span>(<span class="pl-c1">10000</span>);
   }
}</pre></div>

<p>The result of above execution for iter = 10, is as following</p>

<pre><code>06:22:31,368 INFO Executed [heavy-iter] in [10 ms]
06:22:31,379 INFO Executed [heavy-iter] in [10 ms]
06:22:31,389 INFO Executed [heavy-iter] in [10 ms]
06:22:31,399 INFO Executed [heavy-iter] in [10 ms]
06:22:31,409 INFO Executed [heavy-iter] in [10 ms]
06:22:31,419 INFO Executed [heavy-iter] in [10 ms]
06:22:31,429 INFO Executed [heavy-iter] in [10 ms]
06:22:31,440 INFO Executed [heavy-iter] in [10 ms]
06:22:31,450 INFO Executed [heavy-iter] in [10 ms]
06:22:31,460 INFO Executed [heavy-iter] in [10 ms]
06:22:31,460 INFO Executed [void performHeavyTask(int)] in [106 ms]
</code></pre>

<p>In the above example, we have used both the macros. In line-2 we have <code>TIMED_FUNC</code> with object pointer name timerObj and line-7 we have TIMED_SCOPE with object pointer name <code>timerBlkObj</code> and block name <code>heavy-iter</code>. Notice how block name is thrown out to the logs with every hit.  (Note: <code>TIMED_FUNC</code> is <code>TIMED_SCOPE</code> with block name = function name)</p>

<p>You might wonder why do we need object name. Well easylogging++ 
performance tracking feature takes it further and provides ability to 
add, what's called checkpoints. 
Checkpoints have two macros:</p>

<ul>
<li><code>PERFORMANCE_CHECKPOINT(timed-block-obj-name)</code></li>
<li><code>PERFORMANCE_CHECKPOINT_WITH_ID(timed-block-obj-name, id)</code></li>
</ul>

<p>Take a look at following example</p>

<div class="highlight highlight-source-c++"><pre><span class="pl-k">void</span> <span class="pl-en">performHeavyTask</span>(<span class="pl-k">int</span> iter) {
   <span class="pl-c1">TIMED_FUNC</span>(timerObj);
   <span class="pl-c"><span class="pl-c">//</span> Some initializations</span>
   <span class="pl-c"><span class="pl-c">//</span> Some more heavy tasks</span>
   <span class="pl-c1">usleep</span>(<span class="pl-c1">5000</span>);
   <span class="pl-k">while</span> (iter-- &gt; <span class="pl-c1">0</span>) {
       <span class="pl-c1">TIMED_SCOPE</span>(timerBlkObj, <span class="pl-s"><span class="pl-pds">"</span>heavy-iter<span class="pl-pds">"</span></span>);
       <span class="pl-c"><span class="pl-c">//</span> Perform some heavy task in each iter</span>
       <span class="pl-c"><span class="pl-c">//</span> Notice following sleep varies with each iter</span>
       <span class="pl-c1">usleep</span>(iter * <span class="pl-c1">1000</span>);
       <span class="pl-k">if</span> (iter % <span class="pl-c1">3</span>) {
           <span class="pl-c1">PERFORMANCE_CHECKPOINT</span>(timerBlkObj);
       }
   }
}</pre></div>

<p>Notice macro on line-11 (also note comment on line-8). It's checkpoint for heavy-iter block. Now notice following output</p>

<pre><code>06:33:07,558 INFO Executed [heavy-iter] in [9 ms]
06:33:07,566 INFO Performance checkpoint for block [heavy-iter] : [8 ms]
06:33:07,566 INFO Executed [heavy-iter] in [8 ms]
06:33:07,573 INFO Performance checkpoint for block [heavy-iter] : [7 ms]
06:33:07,573 INFO Executed [heavy-iter] in [7 ms]
06:33:07,579 INFO Executed [heavy-iter] in [6 ms]
06:33:07,584 INFO Performance checkpoint for block [heavy-iter] : [5 ms]
06:33:07,584 INFO Executed [heavy-iter] in [5 ms]
06:33:07,589 INFO Performance checkpoint for block [heavy-iter] : [4 ms]
06:33:07,589 INFO Executed [heavy-iter] in [4 ms]
06:33:07,592 INFO Executed [heavy-iter] in [3 ms]
06:33:07,594 INFO Performance checkpoint for block [heavy-iter] : [2 ms]
06:33:07,594 INFO Executed [heavy-iter] in [2 ms]
06:33:07,595 INFO Performance checkpoint for block [heavy-iter] : [1 ms]
06:33:07,595 INFO Executed [heavy-iter] in [1 ms]
06:33:07,595 INFO Executed [heavy-iter] in [0 ms]
06:33:07,595 INFO Executed [void performHeavyTask(int)] in [51 ms]
</code></pre>

<p>You can also compare two checkpoints if they are in sub-blocks e.g, changing from <code>PERFORMANCE_CHECKPOINT(timerBlkObj)</code> to <code>PERFORMANCE_CHECKPOINT(timerObj)</code> will result in following output</p>

<pre><code>06:40:35,522 INFO Performance checkpoint for block [void performHeavyTask(int)] : [51 ms ([1 ms] from last checkpoint)]
</code></pre>

<p>If you had used <code>PERFORMANCE_CHECKPOINT_WITH_ID(timerObj, "mychkpnt");</code> instead, you will get</p>

<pre><code>06:44:37,979 INFO Performance checkpoint [mychkpnt] for block
 [void performHeavyTask(int)] : [51 ms ([1 ms] from checkpoint 
'mychkpnt')]
</code></pre>

<p>Following are some useful macros that you can define to change the behaviour</p>

<table><thead>
<tr>
<th>Macro Name</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td><code>ELPP_DISABLE_PERFORMANCE_TRACKING</code></td>
<td>Disables performance tracking</td>
</tr>
<tr>
<td><code>ELPP_PERFORMANCE_MICROSECONDS</code></td>
<td>Track up-to microseconds (this includes initializing of el::base::PerformanceTracker as well so might time not be 100% accurate)</td>
</tr>
</tbody></table>

<p>Notes:</p>

<ol>
<li><p>Performance tracking uses <code>performance</code> logger (INFO level) by default unless <code>el::base::PerformanceTracker</code>
 is constructed manually (not using macro - not recommended). When 
configuring other loggers, make sure you configure this one as well.</p></li>
<li><p>In above examples, <code>timerObj</code> and <code>timerBlkObj</code> is of type <code>el::base::type::PerformanceTrackerPtr</code>. The <code>checkpoint()</code> routine of the <code>el::base::PerformanceTracker</code> can be accessed by <code>timerObj-&gt;checkpoint()</code> but not recommended as this will override behaviour of using macros, behaviour like location of checkpoint.</p></li>
<li><p>In order to access <code>el::base::type::PerformanceTrackerPtr</code> while in <code>TIMED_BLOCK</code>, you can use <code>timerObj.timer</code></p></li>
<li><p><code>TIMED_BLOCK</code> macro resolves to a single-looped for-loop, so be careful where you define <code>TIMED_BLOCK</code>, if for-loop is allowed in the line where you use it, you should have no errors.</p>

<blockquote>
<p>You may be interested in <a href="https://github.com/easylogging/easyloggingpp/issues/206">python script to parse performance logs</a></p>
</blockquote>

<p><a href="#table-of-contents"><img src="easyloggingpp_README_files/up.png" alt="top" style="max-width:100%;"> Goto Top</a></p></li>
</ol>

<h4><a id="user-content-conditional-performance-tracking" class="anchor" href="#conditional-performance-tracking" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Conditional Performance Tracking</h4>

<p>If you want to enable performance tracking for certain conditions 
only, e.g. based on a certain verbosity level, you can use the variants <code>TIMED_FUNC_IF</code> or <code>TIMED_SCOPE_IF</code>.</p>

<p>A verbosity level example is given below</p>

<div class="highlight highlight-source-c++"><pre> <span class="pl-k">void</span> <span class="pl-en">performHeavyTask</span>(<span class="pl-k">int</span> iter) {
    <span class="pl-c"><span class="pl-c">//</span> enable performance tracking for verbosity level 4 or higher</span>
    <span class="pl-c1">TIMED_FUNC_IF</span>( timerObj, <span class="pl-c1">VLOG_IS_ON</span>(<span class="pl-c1">4</span>) );
    <span class="pl-c"><span class="pl-c">//</span> Some more heavy tasks</span>
 }</pre></div>

<p><a href="#table-of-contents"><img src="easyloggingpp_README_files/up.png" alt="top" style="max-width:100%;"> Goto Top</a></p>

<h4><a id="user-content-make-use-of-performance-tracking-data" class="anchor" href="#make-use-of-performance-tracking-data" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Make Use of Performance Tracking Data</h4>

<p>If you wish to capture performance tracking data right after it is finished, you can do so by extending <code>el::PerformanceTrackingCallback</code>.</p>

<p>In order to install this handler, use <code>void Helpers::installPerformanceTrackingCallback&lt;T&gt;(const std::string&amp; id)</code>. Where <code>T</code> is type of your handler. If you wish to uninstall a callback, you can do so by using <code>Helpers::uninstallPerformanceTrackingCallback&lt;T&gt;(const std::string&amp; id)</code>. See samples for details</p>

<blockquote>
<p>DO NOT TRACK PERFORMANCE IN THIS HANDLER OR YOU WILL END UP IN INFINITE-LOOP</p>
</blockquote>

<p><a href="#table-of-contents"><img src="easyloggingpp_README_files/up.png" alt="top" style="max-width:100%;"> Goto Top</a></p>

<h3><a id="user-content-log-file-rotating" class="anchor" href="#log-file-rotating" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Log File Rotating</h3>

<p>Easylogging++ has ability to roll out (or throw away / rotate) log 
files if they reach certain limit. You can configure this by setting <code>Max_Log_File_Size</code>. See Configuration section above.</p>

<p>If you are having failure in log-rollout, you may have failed to add flag i.e, <code>el::LoggingFlags::StrictLogFileSizeCheck</code>.</p>

<p>This feature has it's own section in this reference manual because 
you can do stuffs with the file being thrown away. This is useful, for 
example if you wish to back this file up etc.
This can be done by using <code>el::Helpers::installPreRollOutCallback(const PreRollOutCallback&amp; handler)</code> where <code>PreRollOutCallback</code> is typedef of type <code>std::function&lt;void(const char*, std::size_t)&gt;</code>. Please note following if you are using this feature</p>

<p>There is a <a href="https://github.com/easylogging/easyloggingpp/tree/master/samples/STL/logrotate.cpp">sample</a> available that you can use as basis.</p>

<blockquote>
<p>You should not log anything in this function. This is because logger 
would already be locked in multi-threaded application and you can run 
into dead lock conditions. If you are sure that you are not going to log
 to same file and not using same logger, feel free to give it a try.</p>
</blockquote>

<p><a href="#table-of-contents"><img src="easyloggingpp_README_files/up.png" alt="top" style="max-width:100%;"> Goto Top</a></p>

<h3><a id="user-content-crash-handling" class="anchor" href="#crash-handling" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Crash Handling</h3>

<p>Prerequisite: Define macro <code>ELPP_FEATURE_CRASH_LOG</code></p>

<p>Easylogging++ provides ability to handle unexpected crashes for GCC 
compilers. This is active by default and can be disabled by defining 
macro <code>ELPP_DISABLE_DEFAULT_CRASH_HANDLING</code>. By doing so you 
are telling library not to handle any crashes. Later on if you wish to 
handle crash yourself, you can assign crash handler of type void 
func(int) where int is signal caught. </p>

<p>Following signals are handled;</p>

<ul>
<li>SIGABRT (If <code>ELPP_HANDLE_SIGABRT</code> macro is defined)</li>
<li>SIGFPE</li>
<li>SIGILL</li>
<li>SIGSEGV</li>
<li>SIGINT</li>
</ul>

<p>Stacktraces are not printed by default, in order to do so define macro <code>ELPP_FEATURE_CRASH_LOG</code>. Remember, stack trace is only available for GCC compiler.</p>

<blockquote>
<p>Default handler and stack trace uses <code>default</code> logger.</p>
</blockquote>

<p>Following are some useful macros that you can define to change the behaviour</p>

<table><thead>
<tr>
<th>Macro Name</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td><code>ELPP_DISABLE_DEFAULT_CRASH_HANDLING</code></td>
<td>Disables default crash handling.</td>
</tr>
<tr>
<td><code>ELPP_HANDLE_SIGABRT</code></td>
<td>Enables handling <code>SIGABRT</code>. This is disabled by default to prevent annoying <code>CTRL + C</code> behaviour when you wish to abort.</td>
</tr>
</tbody></table>

<p><a href="#table-of-contents"><img src="easyloggingpp_README_files/up.png" alt="top" style="max-width:100%;"> Goto Top</a></p>

<h4><a id="user-content-installing-custom-crash-handlers" class="anchor" href="#installing-custom-crash-handlers" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Installing Custom Crash Handlers</h4>

<p>You can use your own crash handler by using <code>el::Helpers::setCrashHandler(const el::base::debug::CrashHandler::Handler&amp;);</code>. </p>

<blockquote>
<p>Make sure to abort application at the end of your crash handler using <code>el::Helpers::crashAbort(int)</code>. If you fail to do so, you will get into endless loop of crashes.</p>
</blockquote>

<p>Here is a good example of your own handler</p>

<div class="highlight highlight-source-c++"><pre>#<span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">"</span>easylogging++.h<span class="pl-pds">"</span></span>

INITIALIZE_EASYLOGGINGPP

<span class="pl-k">void</span> <span class="pl-en">myCrashHandler</span>(<span class="pl-k">int</span> sig) {
    <span class="pl-c1">LOG</span>(ERROR) &lt;&lt; <span class="pl-s"><span class="pl-pds">"</span>Woops! Crashed!<span class="pl-pds">"</span></span>;     
    <span class="pl-c"><span class="pl-c">//</span> FOLLOWING LINE IS ABSOLUTELY NEEDED AT THE END IN ORDER TO ABORT APPLICATION</span>
    <span class="pl-c1">el::Helpers::crashAbort</span>(sig);
}
<span class="pl-k">int</span> <span class="pl-en">main</span>(<span class="pl-k">void</span>) {
    <span class="pl-c1">el::Helpers::setCrashHandler</span>(myCrashHandler);

    <span class="pl-c1">LOG</span>(INFO) &lt;&lt; <span class="pl-s"><span class="pl-pds">"</span>My crash handler!<span class="pl-pds">"</span></span>;

    <span class="pl-k">int</span>* i;
    *i = <span class="pl-c1">0</span>; <span class="pl-c"><span class="pl-c">//</span> Crash!</span>

    <span class="pl-k">return</span> <span class="pl-c1">0</span>;
}</pre></div>

<blockquote>
<p>If you wish to log reason for crash you can do so by using <code>el::Helpers::logCrashReason(int, bool, const el::Level&amp;, const char*)</code>. Following are default parameters for this function:</p>

<div class="highlight highlight-source-c++"><pre> <span class="pl-k">bool</span> stackTraceIfAvailable = <span class="pl-c1">false</span>
 <span class="pl-k">const</span> el::Level&amp; level = el::Level::Fatal
 <span class="pl-k">const</span> <span class="pl-k">char</span>* logger = <span class="pl-s"><span class="pl-pds">"</span>default<span class="pl-pds">"</span></span></pre></div>
</blockquote>

<p><a href="#table-of-contents"><img src="easyloggingpp_README_files/up.png" alt="top" style="max-width:100%;"> Goto Top</a></p>

<h3><a id="user-content-stacktrace" class="anchor" href="#stacktrace" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Stacktrace</h3>

<p>Prerequisite: Define macro <code>ELPP_FEATURE_CRASH_LOG</code></p>

<p>Easylogging++ supports stack trace printing for GCC compilers. You can print stack trace at anytime by calling <code>el::base::debug::StackTrace()</code>, formatting will be done automatically. Note, if you are using non-GCC compiler, you will end-up getting empty output.</p>

<p><a href="#table-of-contents"><img src="easyloggingpp_README_files/up.png" alt="top" style="max-width:100%;"> Goto Top</a></p>

<h3><a id="user-content-multi-threading" class="anchor" href="#multi-threading" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Multi-threading</h3>

<p>Prerequisite: Define macro <code>ELPP_THREAD_SAFE</code></p>

<p>Easylogging++ is thread-safe. By default thread-safety is disabled. You can enable it by defining <code>ELPP_THREAD_SAFE</code> otherwise you will see unexpected results. This is intentional to make library efficient for single threaded application.</p>

<p><a href="#table-of-contents"><img src="easyloggingpp_README_files/up.png" alt="top" style="max-width:100%;"> Goto Top</a></p>

<h3><a id="user-content-check-macros" class="anchor" href="#check-macros" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>CHECK Macros</h3>

<p>Easylogging++ supports CHECK macros, with these macros you can 
quickly check whether certain condition fulfills or not. If not 
Easylogging++ writes FATAL log, causing application to stop (unless 
defined macro to prevent stopping application on fatal).</p>

<table><thead>
<tr>
<th>CHECK Name</th>
<th>Notes + Example</th>
</tr>
</thead><tbody>
<tr>
<td><code>CHECK(condition)</code></td>
<td>Checks for condition e.g, <code>CHECK(isLoggedIn()) &lt;&lt; "Not logged in";</code></td>
</tr>
<tr>
<td><code>CHECK_EQ(a, b)</code></td>
<td>Equality check e.g, <code>CHECK_EQ(getId(), getLoggedOnId()) &lt;&lt; "Invalid user logged in";</code></td>
</tr>
<tr>
<td><code>CHECK_NE(a, b)</code></td>
<td>Inequality check e.g, <code>CHECK_NE(isUserBlocked(userId), false) &lt;&lt; "User is blocked";</code></td>
</tr>
<tr>
<td><code>CHECK_LT(a, b)</code></td>
<td>Less than e.g, <code>CHECK_LT(1, 2) &lt;&lt; "How 1 is not less than 2";</code></td>
</tr>
<tr>
<td><code>CHECK_GT(a, b)</code></td>
<td>Greater than e.g, <code>CHECK_GT(2, 1) &lt;&lt; "How 2 is not greater than 1?";</code></td>
</tr>
<tr>
<td><code>CHECK_LE(a, b)</code></td>
<td>Less than or equal e.g, <code>CHECK_LE(1, 1) &lt;&lt; "1 is not equal or less than 1";</code></td>
</tr>
<tr>
<td><code>CHECK_GE(a, b)</code></td>
<td>Greater than or equal e.g, <code>CHECK_GE(1, 1) &lt;&lt; "1 is not equal or greater than 1";</code></td>
</tr>
<tr>
<td><code>CHECK_NOTNULL(pointer)</code></td>
<td>Ensures pointer is not null - if OK returns pointer e.g, <code>explicit MyClass(Obj* obj) : m_obj(CHECK_NOT_NULL(obj)) {}</code></td>
</tr>
<tr>
<td><code>CHECK_STREQ(str1, str2)</code></td>
<td>C-string equality (case-sensitive) e.g, <code>CHECK_STREQ(argv[1], "0") &lt;&lt; "First arg cannot be 0";</code></td>
</tr>
<tr>
<td><code>CHECK_STRNE(str1, str2)</code></td>
<td>C-string inequality (case-sensitive) e.g, <code>CHECK_STRNE(username1, username2) &lt;&lt; "Usernames cannot be same";</code></td>
</tr>
<tr>
<td><code>CHECK_STRCASEEQ(str1, str2)</code></td>
<td>C-string inequality (<em>case-insensitive</em>) e.g, <code>CHECK_CASESTREQ(argv[1], "Z") &lt;&lt; "First arg cannot be 'z' or 'Z'";</code></td>
</tr>
<tr>
<td><code>CHECK_STRCASENE(str1, str2)</code></td>
<td>C-string inequality (<em>case-insensitive</em>) e.g, <code>CHECK_STRCASENE(username1, username2) &lt;&lt; "Same username not allowed";</code></td>
</tr>
<tr>
<td><code>CHECK_BOUNDS(val, min, max)</code></td>
<td>Checks that <code>val</code> falls under the <code>min</code> and <code>max</code> range e.g, <code>CHECK_BOUNDS(i, 0, list.size() - 1) &lt;&lt; "Index out of bounds";</code></td>
</tr>
</tbody></table>

<blockquote>
<p>Same versions of macros are available for <code>DEBUG</code> only mode, these macros start with <code>D</code> (for debug) followed by the same name. e.g, <code>DCHECK</code> to check only in debug mode (i.e, when <code>_DEBUG</code> is defined or <code>NDEBUG</code> is undefined)</p>
</blockquote>

<p><a href="#table-of-contents"><img src="easyloggingpp_README_files/up.png" alt="top" style="max-width:100%;"> Goto Top</a></p>

<h3><a id="user-content-logging-perror" class="anchor" href="#logging-perror" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Logging perror()</h3>

<p>Easylogging++ supports <code>perror()</code> styled logging using <code>PLOG(LEVEL)</code>, <code>PLOG_IF(Condition, LEVEL)</code>, and <code>PCHECK()</code> using <code>default</code> logger; and for custom logger use <code>CPLOG(LEVEL, LoggerId)</code>, <code>CPLOG_IF(Condition, LEVEL, LoggerId)</code>. This will append <code>: log-error [errno]</code> in the end of log line.</p>

<p><a href="#table-of-contents"><img src="easyloggingpp_README_files/up.png" alt="top" style="max-width:100%;"> Goto Top</a></p>

<h3><a id="user-content-syslog" class="anchor" href="#syslog" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Syslog</h3>

<p>Prerequisite: Define macro <code>ELPP_SYSLOG</code></p>

<p>Easylogging++ supports syslog for platforms that have <code>syslog.h</code> header. If your platform does not have <code>syslog.h</code>,
 make sure you do not define this macro or you will end up in errors. 
Once you are ready to use syslog, you can do so by using one of <code>SYSLOG(LEVEL)</code>, <code>SYSLOG_IF(Condition, LEVEL)</code>, <code>SYSLOG_EVERY_N(n, LEVEL)</code> and uses logger ID: <code>syslog</code>. If you want to use custom logger you can do so by using <code>CSYSLOG(LEVEL, loggerId)</code> or <code>CSYSLOG_IF(Condition, LEVEL, loggerId)</code> or <code>CSYSLOG_EVERY_N(n, LEVEL, loggerId)</code></p>

<p>Syslog in Easylogging++ supports C++ styled streams logging, following example;</p>

<div class="highlight highlight-source-c++"><pre>#<span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">"</span>easylogging++.h<span class="pl-pds">"</span></span>

INITIALIZE_EASYLOGGINGPP
<span class="pl-k">int</span> <span class="pl-en">main</span>(<span class="pl-k">void</span>) {
    <span class="pl-c1">ELPP_INITIALIZE_SYSLOG</span>(<span class="pl-s"><span class="pl-pds">"</span>my_proc<span class="pl-pds">"</span></span>, LOG_PID | LOG_CONS | LOG_PERROR, LOG_USER) <span class="pl-c"><span class="pl-c">//</span> This is optional, you may not add it if you dont want to specify options</span>
    <span class="pl-c"><span class="pl-c">//</span> Alternatively you may do</span>
    <span class="pl-c"><span class="pl-c">//</span> el::SysLogInitializer elSyslogInit("my_proc", LOG_PID | LOG_CONS | LOG_PERROR, LOG_USER);</span>
    <span class="pl-c1">SYSLOG</span>(INFO) &lt;&lt; <span class="pl-s"><span class="pl-pds">"</span>This is syslog - read it from /var/log/syslog<span class="pl-pds">"</span></span>
    <span class="pl-k">return</span> <span class="pl-c1">0</span>;
}</pre></div>

<p>Syslog support for Easylogging++ only supports following levels; each level is corresponded with syslog priority as following</p>

<ul>
<li>INFO (LOG_INFO)</li>
<li>DEBUG (LOG_DEBUG)</li>
<li>WARNING (LOG_WARNING)</li>
<li>ERROR (LOG_ERR)</li>
<li>FATAL (LOG_EMERG)</li>
</ul>

<p>Following levels are not supported and correspond to <code>LOG_NOTICE</code>: TRACE, whereas VERBOSE level is completely not supported</p>

<p><a href="#table-of-contents"><img src="easyloggingpp_README_files/up.png" alt="top" style="max-width:100%;"> Goto Top</a></p>

<h3><a id="user-content-stl-logging" class="anchor" href="#stl-logging" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>STL Logging</h3>

<p>Prerequisite: Define macro <code>ELPP_STL_LOGGING</code></p>

<p>As mentioned earlier, with easylogging++, you can log your STL 
templates including most containers. In order to do so you will need to 
define <code>ELPP_STL_LOGGING</code> macro. This enables including all 
the necessary headers and defines all necessary functions.
For performance, containers are limited to log maximum of 100 entries. 
This behaviour can be changed by changed header file 
(base::consts::kMaxLogPerContainer) but not recommended as in order to 
log, writer has to go through each entry causing potential delays. But 
if you are not really concerned with performance, you may change this 
value.</p>

<p><a href="#table-of-contents"><img src="easyloggingpp_README_files/up.png" alt="top" style="max-width:100%;"> Goto Top</a></p>

<h4><a id="user-content-supported-templates" class="anchor" href="#supported-templates" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Supported Templates</h4>

<p>Following templates are supported as part of STL Logging; note: basic
 and primitive types e.g, std::string or long are not listed as they is 
supported anyway, following list only contains non-basic types e.g, 
containers or bitset etc.</p>

<table><thead>
<tr>
<th>*</th>
<th>*</th>
<th>*</th>
<th>*</th>
</tr>
</thead><tbody>
<tr>
<td>std::vector</td>
<td>std::list</td>
<td>std::deque</td>
<td>std::queue</td>
</tr>
<tr>
<td>std::stack</td>
<td>std::priority_queue</td>
<td>std::set</td>
<td>std::multiset</td>
</tr>
<tr>
<td>std::pair</td>
<td>std::bitset</td>
<td>std::map</td>
<td>std::multimap</td>
</tr>
</tbody></table>

<p>Some C++11 specific templates are supported by further explicit macro definitions; note these also need <code>ELPP_STL_LOGGING</code></p>

<table><thead>
<tr>
<th>Template</th>
<th>Macro Needed</th>
</tr>
</thead><tbody>
<tr>
<td>std::array</td>
<td><code>ELPP_LOG_STD_ARRAY</code></td>
</tr>
<tr>
<td>std::unordered_map</td>
<td><code>ELPP_LOG_UNORDERED_MAP</code></td>
</tr>
<tr>
<td>std::unordered_multimap</td>
<td><code>ELPP_LOG_UNORDERED_MAP</code></td>
</tr>
<tr>
<td>std::unordered_set</td>
<td><code>ELPP_LOG_UNORDERED_SET</code></td>
</tr>
<tr>
<td>std::unordered_multiset</td>
<td><code>ELPP_LOG_UNORDERED_SET</code></td>
</tr>
</tbody></table>

<p>Standard manipulators are also supported, in addition std::stringstream is also supported.</p>

<p><a href="#table-of-contents"><img src="easyloggingpp_README_files/up.png" alt="top" style="max-width:100%;"> Goto Top</a></p>

<h3><a id="user-content-qt-logging" class="anchor" href="#qt-logging" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Qt Logging</h3>

<p>Prerequisite: Define macro <code>ELPP_QT_LOGGING</code></p>

<p>Easylogging++ has complete logging support for Qt core library. When 
enabled, this will include all the headers supported Qt logging. Once 
you did that, you should be good to go.</p>

<p>Following Qt classes and containers are supported by Easylogging++ v9.0+</p>

<table><thead>
<tr>
<th>*</th>
<th>*</th>
<th>*</th>
<th>*</th>
<th>*</th>
<th>*</th>
</tr>
</thead><tbody>
<tr>
<td><code>QString</code></td>
<td><code>QByteArray</code></td>
<td><code>QLatin</code></td>
<td><code>QList</code></td>
<td><code>QVector</code></td>
<td><code>QQueue</code></td>
</tr>
<tr>
<td><code>QSet</code></td>
<td><code>QPair</code></td>
<td><code>QMap</code></td>
<td><code>QMultiMap</code></td>
<td><code>QHash</code></td>
<td><code>QMultiHash</code></td>
</tr>
<tr>
<td><code>QLinkedList</code></td>
<td><code>QStack</code></td>
<td><code>QChar</code></td>
<td><code>q[u]int[64]</code></td>
<td></td>
<td></td>
</tr>
</tbody></table>

<p>Similar to STL logging, Qt containers are also limit to log 100 
entries per log, you can change this behaviour by changing 
base::consts::kMaxLogPerContainer from header but this is not 
recommended as this was done for performance purposes.</p>

<p>Also note, if you are logging a container that contains custom class, make sure you have read Extending Library section below.</p>

<p><a href="#table-of-contents"><img src="easyloggingpp_README_files/up.png" alt="top" style="max-width:100%;"> Goto Top</a></p>

<h3><a id="user-content-boost-logging" class="anchor" href="#boost-logging" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Boost Logging</h3>

<p>Prerequisite: Define macro <code>ELPP_BOOST_LOGGING</code></p>

<p>Easylogging++ supports some of boost templates. Following table shows the templates supported.</p>

<table><thead>
<tr>
<th>*</th>
<th>*</th>
</tr>
</thead><tbody>
<tr>
<td><code>boost::container::vector</code></td>
<td><code>boost::container::stable_vector</code></td>
</tr>
<tr>
<td><code>boost::container::map</code></td>
<td><code>boost::container::flat_map</code></td>
</tr>
<tr>
<td><code>boost::container::set</code></td>
<td><code>boost::container::flat_set</code></td>
</tr>
<tr>
<td><code>boost::container::deque</code></td>
<td><code>boost::container::list</code></td>
</tr>
<tr>
<td><code>boost::container::string</code></td>
<td></td>
</tr>
</tbody></table>

<p><a href="#table-of-contents"><img src="easyloggingpp_README_files/up.png" alt="top" style="max-width:100%;"> Goto Top</a></p>

<h3><a id="user-content-wxwidgets-logging" class="anchor" href="#wxwidgets-logging" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>wxWidgets Logging</h3>

<p>Prerequisite: Define macro <code>ELPP_WXWIDGETS_LOGGING</code></p>

<p>Easylogging++ supports some of wxWidgets templates.</p>

<p>Following table shows the templates supported.</p>

<table><thead>
<tr>
<th>*</th>
<th>*</th>
<th>*</th>
<th>*</th>
<th>*</th>
<th>*</th>
</tr>
</thead><tbody>
<tr>
<td><code>wxString</code></td>
<td><code>wxVector</code></td>
<td><code>wxList</code></td>
<td><code>wxString</code></td>
<td><code>wxHashSet</code></td>
<td><code>wxHashMap</code></td>
</tr>
</tbody></table>

<p>wxWidgets has its own way of declaring and defining some templates e.g, <code>wxList</code> where  you use <code>WX_DECLARE_LIST</code> macro to declare a list.</p>

<p>In order to setup a container for logging that holds pointers to object, use <code>ELPP_WX_PTR_ENABLED</code>, otherwise if container holds actual object e.g, wxHashSet use <code>ELPP_WX_ENABLED</code>. For containers like <code>wxHashMap</code> because it contains value and pair, use <code>ELPP_WX_HASH_MAP_ENABLED</code> macro.</p>

<div class="highlight highlight-source-c++"><pre><span class="pl-c"><span class="pl-c">//</span> wxList example</span>
<span class="pl-en">WX_DECLARE_LIST</span>(<span class="pl-k">int</span>, MyList);
<span class="pl-en">WX_DEFINE_LIST</span>(MyList);
<span class="pl-c"><span class="pl-c">//</span> Following line does the trick</span>
<span class="pl-en">ELPP_WX_PTR_ENABLED</span>(MyList);

<span class="pl-c"><span class="pl-c">//</span> wxHashSet example</span>
<span class="pl-en">WX_DECLARE_HASH_SET</span>(<span class="pl-k">int</span>, wxIntegerHash, wxIntegerEqual, IntHashSet);
<span class="pl-c"><span class="pl-c">//</span> Following line does the trick!</span>
<span class="pl-en">ELPP_WX_ENABLED</span>(IntHashSet)

<span class="pl-c"><span class="pl-c">//</span> wxHashMap example</span>
WX_DECLARE_STRING_HASH_MAP(wxString, MyHashMap);
<span class="pl-c"><span class="pl-c">//</span> Following line does the trick</span>
<span class="pl-en">ELPP_WX_HASH_MAP_ENABLED</span>(MyHashMap)</pre></div>

<p>You may also have a look at wxWidgets sample</p>

<p><a href="#table-of-contents"><img src="easyloggingpp_README_files/up.png" alt="top" style="max-width:100%;"> Goto Top</a></p>

<h3><a id="user-content-extending-library" class="anchor" href="#extending-library" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Extending Library</h3>

<h4><a id="user-content-logging-your-own-class" class="anchor" href="#logging-your-own-class" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Logging Your Own Class</h4>

<p>You can log your own classes by extending <code>el::Loggable</code> class and implementing pure-virtual function <code>void log(std::ostream&amp; os) const</code>. Following example shows a good way to extend a class.</p>

<div class="highlight highlight-source-c++"><pre>#<span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">"</span>easylogging++.h<span class="pl-pds">"</span></span>

INITIALIZE_EASYLOGGINGPP
<span class="pl-k">class</span> <span class="pl-en">Integer</span> : <span class="pl-k">public</span> <span class="pl-en">el</span>::Loggable {
<span class="pl-k">public:</span>
    <span class="pl-en">Integer</span>(<span class="pl-k">int</span> i) : m_underlyingInt(i) {
    }
    Integer&amp; <span class="pl-k">operator</span>=(<span class="pl-k">const</span> Integer&amp; integer) {
        m_underlyingInt = integer.<span class="pl-smi">m_underlyingInt</span>;
        <span class="pl-k">return</span> *<span class="pl-c1">this</span>;
    }
    <span class="pl-c"><span class="pl-c">//</span> Following line does the trick!</span>
    <span class="pl-c"><span class="pl-c">//</span> Note: el::base::type::ostream_t is either std::wostream or std::ostream depending on unicode enabled or not</span>
    <span class="pl-k">virtual</span> <span class="pl-k">void</span> <span class="pl-en">log</span>(el::base::type::<span class="pl-c1">ostream_t</span>&amp; os) <span class="pl-k">const</span> {
        os &lt;&lt; m_underlyingInt;
    }
<span class="pl-k">private:</span>
    <span class="pl-k">int</span> m_underlyingInt;
};

<span class="pl-k">int</span> <span class="pl-en">main</span>(<span class="pl-k">void</span>) {
    Integer count = <span class="pl-c1">5</span>;
    <span class="pl-c1">LOG</span>(INFO) &lt;&lt; count;
    <span class="pl-k">return</span> <span class="pl-c1">0</span>;
}</pre></div>

<p><a href="#table-of-contents"><img src="easyloggingpp_README_files/up.png" alt="top" style="max-width:100%;"> Goto Top</a></p>

<h4><a id="user-content-logging-third-party-class" class="anchor" href="#logging-third-party-class" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Logging Third-party Class</h4>

<p>Let's say you have third-party class that you don't have access to 
make changes to, and it's not yet loggable. In order to make it 
loggable, you can use <code>MAKE_LOGGABLE(ClassType, ClassInstance, OutputStreamInstance)</code> to make it Easylogging++ friendly.</p>

<p>Following sample shows a good usage:</p>

<div class="highlight highlight-source-c++"><pre>#<span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">"</span>easylogging++.h<span class="pl-pds">"</span></span>

INITIALIZE_EASYLOGGINGPP

<span class="pl-k">class</span> <span class="pl-en">Integer</span> {
<span class="pl-k">public:</span>
    <span class="pl-en">Integer</span>(<span class="pl-k">int</span> i) : m_underlyingInt(i) {
    }
    Integer&amp; <span class="pl-k">operator</span>=(<span class="pl-k">const</span> Integer&amp; integer) {
        m_underlyingInt = integer.<span class="pl-smi">m_underlyingInt</span>;
        <span class="pl-k">return</span> *<span class="pl-c1">this</span>;
    }
    <span class="pl-k">int</span> <span class="pl-en">getInt</span>(<span class="pl-k">void</span>) <span class="pl-k">const</span> { <span class="pl-k">return</span> m_underlyingInt; }
<span class="pl-k">private:</span>
    <span class="pl-k">int</span> m_underlyingInt;
};

<span class="pl-c"><span class="pl-c">//</span> Following line does the trick!</span>
<span class="pl-k">inline</span> <span class="pl-en">MAKE_LOGGABLE</span>(Integer, integer, os) {
    os &lt;&lt; integer.<span class="pl-c1">getInt</span>();
    <span class="pl-k">return</span> os;
}
<span class="pl-k">int</span> <span class="pl-en">main</span>(<span class="pl-k">void</span>) {
    Integer count = <span class="pl-c1">5</span>;
    <span class="pl-c1">LOG</span>(INFO) &lt;&lt; count;
    <span class="pl-k">return</span> <span class="pl-c1">0</span>;
}</pre></div>

<p>Another very nice example (to log <code>std::chrono::system_clock::time_point</code>)</p>

<div class="highlight highlight-source-c++"><pre><span class="pl-k">inline</span> <span class="pl-en">MAKE_LOGGABLE</span>(std::chrono::system_clock::time_point, when, os) {
    <span class="pl-c1">time_t</span> t = <span class="pl-c1">std::chrono::system_clock::to_time_t</span>(when);
    <span class="pl-k">auto</span> <span class="pl-c1">tm</span> = <span class="pl-c1">std::localtime</span>(&amp;t);
    <span class="pl-k">char</span> buf[<span class="pl-c1">1024</span>];
    <span class="pl-c1">strftime</span>(buf,<span class="pl-k">sizeof</span>(buf), <span class="pl-s"><span class="pl-pds">"</span>%F %T (%Z)<span class="pl-pds">"</span></span>, <span class="pl-c1">tm</span>);
    os &lt;&lt; buf;
    <span class="pl-k">return</span> os;
}</pre></div>

<p>This may not be practically best implementation but you get the point.</p>

<blockquote>
<p>Just be careful with this as having a time-consuming overloading of <code>log(el::base::type::ostream_t&amp; os)</code> and <code>MAKE_LOGGABLE</code>, they get called everytime class is being logged.</p>
</blockquote>

<p><a href="#table-of-contents"><img src="easyloggingpp_README_files/up.png" alt="top" style="max-width:100%;"> Goto Top</a></p>

<h3><a id="user-content-manually-flushing-and-rolling-log-files" class="anchor" href="#manually-flushing-and-rolling-log-files" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Manually Flushing and Rolling Log Files</h3>

<p>You can manually flush log files using <code>el::Logger::flush()</code> (to flush single logger with all referencing log files) or <code>el::Loggers::flushAll()</code> (to flush all log files for all levels).</p>

<p>If you have not set flag <code>LoggingFlag::StrictLogFileSizeCheck</code> for some reason, you can manually check for log files that need rolling; by using <code>el::Helpers::validateFileRolling(el::Logger*, const el::Level&amp;)</code>. </p>

<p><a href="#table-of-contents"><img src="easyloggingpp_README_files/up.png" alt="top" style="max-width:100%;"> Goto Top</a></p>

<h3><a id="user-content-log-dispatch-callback" class="anchor" href="#log-dispatch-callback" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Log Dispatch Callback</h3>

<p>If you wish to capture log message right after it is dispatched, you can do so by having a class that extends <code>el::LogDispatchCallback</code> and implement the pure-virtual functions, then install it at anytime using <code>el::Helpers::installLogDispatchCallback&lt;T&gt;(const std::string&amp;)</code>. If you wish to uninstall a pre-installed handler with same ID, you can do so by using <code>el::Helpers::uninstallLogDispatchCallback&lt;T&gt;(const std::string&amp;)</code></p>

<blockquote>
<p>DO NOT LOG ANYTHING IN THIS HANDLER OR YOU WILL END UP IN INFINITE-LOOP</p>
</blockquote>

<p><a href="#table-of-contents"><img src="easyloggingpp_README_files/up.png" alt="top" style="max-width:100%;"> Goto Top</a></p>

<h3><a id="user-content-logger-registration-callback" class="anchor" href="#logger-registration-callback" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Logger Registration Callback</h3>

<p>If you wish to capture event of logger registration (and potentially 
want to reconfigure this logger without changing default configuration) 
you can use <code>el::LoggerRegistrationCallback</code>. The syntax is similar to <a href="#log-dispatch-callback">other callbacks</a>. You can use <a href="https://github.com/easylogging/easyloggingpp/blob/master/samples/STL/new-logger-registration-callback.cpp">this sample</a> as basis.</p>

<blockquote>
<p>DO NOT LOG ANYTHING IN THIS HANDLER</p>
</blockquote>

<p><a href="#table-of-contents"><img src="easyloggingpp_README_files/up.png" alt="top" style="max-width:100%;"> Goto Top</a></p>

<h3><a id="user-content-asynchronous-logging" class="anchor" href="#asynchronous-logging" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Asynchronous Logging</h3>

<p>Prerequisite: Define macro <code>ELPP_EXPERIMENTAL_ASYNC</code></p>

<p>Asynchronous logging is in experimental stages and they are not 
widely promoted. You may enable and test this feature by defining macro <code>ELPP_EXPERIMENTAL_ASYNC</code> and if you find some issue with the feature please report in <a href="https://github.com/easylogging/easyloggingpp/issues/202">this issue</a>. Reporting issues always help for constant improvements.</p>

<p>Please note:</p>

<ul>
<li>Asynchronous will only work with few compilers (it purely uses <code>std::thread</code>)</li>
<li>Compiler should support <code>std::this_thread::sleep_for</code>. This restriction may (or may not) be removed in future (stable) version of asynchronous logging.</li>
<li><p>You should not rely on asynchronous logging in production, this is because feature is in experiemental stages.</p>

<p><a href="#table-of-contents"><img src="easyloggingpp_README_files/up.png" alt="top" style="max-width:100%;"> Goto Top</a></p></li>
</ul>

<h3><a id="user-content-helper-classes" class="anchor" href="#helper-classes" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Helper Classes</h3>

<p>There are static helper classes available to make it easy to do stuffs;</p>

<ul>
<li><code>el::Helpers</code></li>
<li><code>el::Loggers</code></li>
</ul>

<p>You can do various cool stuffs using functions in these classes, see <a href="https://github.com/easylogging/easyloggingpp/issues/210">this issue</a> for instance.</p>

<p><a href="#table-of-contents"><img src="easyloggingpp_README_files/up.png" alt="top" style="max-width:100%;"> Goto Top</a></p>

<h1><a id="user-content-contribution" class="anchor" href="#contribution" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Contribution</h1>

<h3><a id="user-content-submitting-patches" class="anchor" href="#submitting-patches" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Submitting Patches</h3>

<p>You can submit patches to <code>develop</code> branch and we will try
 and merge them. Since it's based on single header, it can be sometimes 
difficult to merge without having merge conflicts.</p>

<p><a href="#table-of-contents"><img src="easyloggingpp_README_files/up.png" alt="top" style="max-width:100%;"> Goto Top</a></p>

<h3><a id="user-content-reporting-a-bug" class="anchor" href="#reporting-a-bug" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Reporting a Bug</h3>

<p>If you have found a bug and wish to report it, feel free to do so at <a href="https://github.com/easylogging/easyloggingpp/issues?state=open">github issue tracker</a>. I will try to look at it as soon as possible. Some information should be provided to make it easy to reproduce;</p>

<ul>
<li>Platform (OS, Compiler)</li>
<li>Log file location</li>
<li>Macros defined (on compilation) OR simple compilation </li>
<li>Please assign issue label.</li>
</ul>

<p>Try to provide as much information as possible. Any bug with no clear information will be ignored and closed.</p>

<p><a href="#table-of-contents"><img src="easyloggingpp_README_files/up.png" alt="top" style="max-width:100%;"> Goto Top</a></p>

<h3><a id="user-content-donation" class="anchor" href="#donation" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Donation</h3>

<p>Easylogging++ is free to use. You can check the details on where do donations go by clicking link below.</p>

<p><a href="http://muflihun.com/support/"><img src="easyloggingpp_README_files/68747470733a2f2f7777772e70617970616c6f626a656374732e636f6d2f.gif" alt="paypal" data-canonical-src="https://www.paypalobjects.com/en_AU/i/btn/btn_donateCC_LG.gif" style="max-width:100%;"></a></p>

<p><a href="#table-of-contents"><img src="easyloggingpp_README_files/up.png" alt="top" style="max-width:100%;"> Goto Top</a></p>

<h1><a id="user-content-compatibility" class="anchor" href="#compatibility" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Compatibility</h1>

<p>Easylogging++ requires a decent C++0x complient compiler. Some 
compilers known to work with v9.0+ are shown in table below, for older 
versions please refer to readme on corresponding release at github</p>

<table><thead>
<tr>
<th>*****</th>
<th>Compiler/Platform</th>
<th>Notes</th>
</tr>
</thead><tbody>
<tr>
<td><a href="https://raw.githubusercontent.com/easylogging/homepage/master/images/icons/gcc.png?v=4" target="_blank"><img src="easyloggingpp_README_files/gcc.png" alt="gcc" style="max-width:100%;"></a></td>
<td>GCC 4.7+</td>
<td>Stack trace logging. Very close to support GCC 4.6 if it had 
supported strong enum types casting to underlying type. It causes 
internal compiler error.</td>
</tr>
<tr>
<td><a href="https://raw.githubusercontent.com/easylogging/homepage/master/images/icons/llvm.png?v=2" target="_blank"><img src="easyloggingpp_README_files/llvm.png" alt="llvm" style="max-width:100%;"></a></td>
<td>Clang++ 3.1+</td>
<td>Stack trace logging only with gcc compliant.</td>
</tr>
<tr>
<td><a href="https://raw.githubusercontent.com/easylogging/homepage/master/images/icons/intel.png?v=2" target="_blank"><img src="easyloggingpp_README_files/intel.png" alt="intel" style="max-width:100%;"></a></td>
<td>Intel C++ 13.0+</td>
<td>Workarounds to support: Use if instead of switch on strong enum type. No <code>final</code> keyword etc. Stack trace logging only with gcc compliant</td>
</tr>
<tr>
<td><a href="https://raw.githubusercontent.com/easylogging/homepage/master/images/icons/vcpp.png?v=2" target="_blank"><img src="easyloggingpp_README_files/vcpp.png" alt="vcpp" style="max-width:100%;"></a></td>
<td>Visual C++ 11.0+</td>
<td>Tested with VS2012, VS2013; Use of argument templates instead of 
variadic templates. CRT warnings control. No stack trace logging.</td>
</tr>
<tr>
<td><a href="https://raw.githubusercontent.com/easylogging/homepage/master/images/icons/mingw.png?v=2" target="_blank"><img src="easyloggingpp_README_files/mingw.png" alt="mingw" style="max-width:100%;"></a></td>
<td>MinGW</td>
<td>(gcc version 4.7+) Workarounds to support: Mutex wrapper, no stack trace logging. No thread ID on windows</td>
</tr>
<tr>
<td><a href="https://raw.githubusercontent.com/easylogging/homepage/master/images/icons/tdm.png?v=3" target="_blank"><img src="easyloggingpp_README_files/tdm.png" alt="tdm" style="max-width:100%;"></a></td>
<td>TDM-GCC 4.7.1</td>
<td>Tested with TDM-GCC 4.7.1 32 and 64 bit compilers</td>
</tr>
<tr>
<td><a href="https://raw.githubusercontent.com/easylogging/homepage/master/images/icons/cygwin.png?v=2" target="_blank"><img src="easyloggingpp_README_files/cygwin.png" alt="cygwin" style="max-width:100%;"></a></td>
<td>Cygwin</td>
<td>Tested with gcc version 4.8+</td>
</tr>
<tr>
<td><a href="https://raw.githubusercontent.com/easylogging/homepage/master/images/icons/devcpp.png?v=3" target="_blank"><img src="easyloggingpp_README_files/devcpp.png" alt="devcpp" style="max-width:100%;"></a></td>
<td>Dev C++ 5.4+</td>
<td>Tested with Dev-C++ 5.4.2 using TDM-GCC 4.7.1 32 &amp; 64-bit compilers</td>
</tr>
</tbody></table>

<p>Operating systems that have been tested are shown in table below. 
Easylogging++ should work on other major operating systems that are not 
in the list.</p>

<table><thead>
<tr>
<th>*****</th>
<th>Operating System</th>
<th>Notes</th>
</tr>
</thead><tbody>
<tr>
<td><a href="https://raw.githubusercontent.com/easylogging/homepage/master/images/icons/windows10.png?v=2" target="_blank"><img src="easyloggingpp_README_files/windows10.png" alt="win10" style="max-width:100%;"></a></td>
<td>Windows 10</td>
<td>Tested on 64-bit, should also work on 32-bit</td>
</tr>
<tr>
<td><a href="https://raw.githubusercontent.com/easylogging/homepage/master/images/icons/windows8.png?v=2" target="_blank"><img src="easyloggingpp_README_files/windows8.png" alt="win8" style="max-width:100%;"></a></td>
<td>Windows 8</td>
<td>Tested on 64-bit, should also work on 32-bit</td>
</tr>
<tr>
<td><a href="https://raw.githubusercontent.com/easylogging/homepage/master/images/icons/windows7.png?v=2" target="_blank"><img src="easyloggingpp_README_files/windows7.png" alt="win7" style="max-width:100%;"></a></td>
<td>Windows 7</td>
<td>Tested on 64-bit, should also work on 32-bit</td>
</tr>
<tr>
<td><a href="https://raw.githubusercontent.com/easylogging/homepage/master/images/icons/windowsxp.png?v=2" target="_blank"><img src="easyloggingpp_README_files/windowsxp.png" alt="winxp" style="max-width:100%;"></a></td>
<td>Windows XP</td>
<td>Tested on 32-bit, should also work on 64-bit</td>
</tr>
<tr>
<td><a href="https://raw.githubusercontent.com/easylogging/homepage/master/images/icons/mac-osx.png?v=2" target="_blank"><img src="easyloggingpp_README_files/mac-osx.png" alt="mac" style="max-width:100%;"></a></td>
<td>Mac OSX</td>
<td>Clang++ 3.1, g++ (You need <code>-std=c++11 -stdlib=libc++</code> to successfully compile)</td>
</tr>
<tr>
<td><a href="https://raw.githubusercontent.com/easylogging/homepage/master/images/icons/scientific-linux.png?v=2" target="_blank"><img src="easyloggingpp_README_files/scientific-linux.png" alt="sl" style="max-width:100%;"></a></td>
<td>Scientific Linux 6.2</td>
<td>Tested using Intel C++ 13.1.3 (gcc version 4.4.6 compatibility)</td>
</tr>
<tr>
<td><a href="https://raw.githubusercontent.com/easylogging/homepage/master/images/icons/linux-mint.png?v=2" target="_blank"><img src="easyloggingpp_README_files/linux-mint.png" alt="mint" style="max-width:100%;"></a></td>
<td>Linux Mint 14</td>
<td>64-bit, mainly developed on this machine using all compatible linux compilers</td>
</tr>
<tr>
<td><a href="https://raw.githubusercontent.com/easylogging/homepage/master/images/icons/fedora.png?v=3" target="_blank"><img src="easyloggingpp_README_files/fedora.png" alt="fedora" style="max-width:100%;"></a></td>
<td>Fedora 19</td>
<td>64-bit, using g++ 4.8.1</td>
</tr>
<tr>
<td><a href="https://raw.githubusercontent.com/easylogging/homepage/master/images/icons/ubuntu.png?v=2" target="_blank"><img src="easyloggingpp_README_files/ubuntu.png" alt="ubuntu" style="max-width:100%;"></a></td>
<td>Ubuntu 13.04</td>
<td>64-bit, using g++ 4.7.3 (libstdc++6-4.7-dev)</td>
</tr>
<tr>
<td><a href="https://raw.githubusercontent.com/easylogging/homepage/master/images/icons/free-bsd.png?v=2" target="_blank"><img src="easyloggingpp_README_files/free-bsd.png" alt="freebsd" style="max-width:100%;"></a></td>
<td>FreeBSD</td>
<td>(from github user)</td>
</tr>
<tr>
<td><a href="https://raw.githubusercontent.com/easylogging/homepage/master/images/icons/android.png?v=2" target="_blank"><img src="easyloggingpp_README_files/android.png" alt="android" style="max-width:100%;"></a></td>
<td>Android</td>
<td>Tested with C4droid (g++) on Galaxy Tab 2</td>
</tr>
<tr>
<td><a href="https://raw.githubusercontent.com/easylogging/homepage/master/images/icons/raspberry-pi.png?v=3" target="_blank"><img src="easyloggingpp_README_files/raspberry-pi.png" alt="raspberrypi" style="max-width:100%;"></a></td>
<td>RaspberryPi 7.6</td>
<td>Tested with 7.6.2-1.1 (gcc version 4.9.1 (Raspbian 4.9.1-1)) by contributor</td>
</tr>
<tr>
<td><a href="https://raw.githubusercontent.com/easylogging/homepage/master/images/icons/solaris.png?v=3" target="_blank"><img src="easyloggingpp_README_files/solaris.png" alt="solaris" style="max-width:100%;"></a></td>
<td>Solaris i86</td>
<td>Tested by contributor</td>
</tr>
</tbody></table>

<p>Easylogging++ has also been tested with following C++ libraries;</p>

<table><thead>
<tr>
<th>*****</th>
<th>Library</th>
<th>Notes</th>
</tr>
</thead><tbody>
<tr>
<td><a href="https://raw.githubusercontent.com/easylogging/homepage/master/images/icons/qt.png?v=3" target="_blank"><img src="easyloggingpp_README_files/qt.png" alt="qt" style="max-width:100%;"></a></td>
<td>Qt</td>
<td>Tested with Qt 4.6.2, Qt 5 and Qt 5.5 (with C++0x and C++11)</td>
</tr>
<tr>
<td><a href="https://raw.githubusercontent.com/easylogging/homepage/master/images/icons/boost.png?v=3" target="_blank"><img src="easyloggingpp_README_files/boost.png" alt="boost" style="max-width:100%;"></a></td>
<td>Boost</td>
<td>Tested with boost 1.51</td>
</tr>
<tr>
<td><a href="https://raw.githubusercontent.com/easylogging/homepage/master/images/icons/wxwidgets.png?v=3" target="_blank"><img src="easyloggingpp_README_files/wxwidgets.png" alt="wxwidgets" style="max-width:100%;"></a></td>
<td>wxWidgets</td>
<td>Tested with wxWidgets 2.9.4</td>
</tr>
<tr>
<td><a href="https://raw.githubusercontent.com/easylogging/homepage/master/images/icons/gtkmm.png?v=3" target="_blank"><img src="easyloggingpp_README_files/gtkmm.png" alt="gtkmm" style="max-width:100%;"></a></td>
<td>gtkmm</td>
<td>Tested with gtkmm 2.4</td>
</tr>
</tbody></table>

<p><a href="#table-of-contents"><img src="easyloggingpp_README_files/up.png" alt="top" style="max-width:100%;"> Goto Top</a></p>

<h1><a id="user-content-licence" class="anchor" href="#licence" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Licence</h1>

<pre><code>The MIT License (MIT)

Copyright (c) 2017 muflihun.com

https://github.com/easylogging/easyloggingpp
http://easylogging.muflihun.com
http://muflihun.com

Permission is hereby granted, free of charge, to any person obtaining a copy of
this software and associated documentation files (the "Software"), to deal in
the Software without restriction, including without limitation the rights to
use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
the Software, and to permit persons to whom the Software is furnished to do so,
subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
</code></pre>

<p><a href="#table-of-contents"><img src="easyloggingpp_README_files/up.png" alt="top" style="max-width:100%;"> Goto Top</a></p>

<h1><a id="user-content-disclaimer" class="anchor" href="#disclaimer" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Disclaimer</h1>

<p>Icons used in this manual (in compatibility section) are solely for 
information readability purposes. I do not own these icons. If anyone 
has issues with usage of these icon, please feel free to contact me via 
company's email and I will look for an alternative. Company's email 
address is required so that I can verify the ownership, any other email 
address for this purpose will be ignored.</p>

<p>"Pencil +" icon is Easylogging++ logo and should only be used where giving credit to Easylogging++ library.</p>

<p><a href="#table-of-contents"><img src="easyloggingpp_README_files/up.png" alt="top" style="max-width:100%;"> Goto Top</a></p>
</article>
  </div>

</div>

<button type="button" data-facebox="#jump-to-line" data-facebox-class="linejump" data-hotkey="l" class="d-none">Jump to Line</button>
<div id="jump-to-line" style="display:none">
  <!-- '"` --><!-- </textarea></xmp> --><form accept-charset="UTF-8" action="" class="js-jump-to-line-form" method="get"><div style="margin:0;padding:0;display:inline"><input name="utf8" value="✓" type="hidden"></div>
    <input class="form-control linejump-input js-jump-to-line-field" placeholder="Jump to line…" aria-label="Jump to line" autofocus="" type="text">
    <button type="submit" class="btn">Go</button>
</form></div>

  </div>
  <div class="modal-backdrop js-touch-events"></div>
</div></div>
  </div>

    </div>

        <div class="container site-footer-container">
  <div class="site-footer" role="contentinfo">
    <ul class="site-footer-links float-right">
        <li><a href="https://github.com/contact" data-ga-click="Footer, go to contact, text:contact">Contact GitHub</a></li>
      <li><a href="https://developer.github.com/" data-ga-click="Footer, go to api, text:api">API</a></li>
      <li><a href="https://training.github.com/" data-ga-click="Footer, go to training, text:training">Training</a></li>
      <li><a href="https://shop.github.com/" data-ga-click="Footer, go to shop, text:shop">Shop</a></li>
        <li><a href="https://github.com/blog" data-ga-click="Footer, go to blog, text:blog">Blog</a></li>
        <li><a href="https://github.com/about" data-ga-click="Footer, go to about, text:about">About</a></li>

    </ul>

    <a href="https://github.com/" aria-label="Homepage" class="site-footer-mark" title="GitHub">
      <svg aria-hidden="true" class="octicon octicon-mark-github" height="24" version="1.1" viewBox="0 0 16 16" width="24"><path fill-rule="evenodd" d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0 0 16 8c0-4.42-3.58-8-8-8z"></path></svg>
</a>
    <ul class="site-footer-links">
      <li>© 2017 <span title="0.07251s from github-fe-bc3c088.cp1-iad.github.net">GitHub</span>, Inc.</li>
        <li><a href="https://github.com/site/terms" data-ga-click="Footer, go to terms, text:terms">Terms</a></li>
        <li><a href="https://github.com/site/privacy" data-ga-click="Footer, go to privacy, text:privacy">Privacy</a></li>
        <li><a href="https://github.com/security" data-ga-click="Footer, go to security, text:security">Security</a></li>
        <li><a href="https://status.github.com/" data-ga-click="Footer, go to status, text:status">Status</a></li>
        <li><a href="https://help.github.com/" data-ga-click="Footer, go to help, text:help">Help</a></li>
    </ul>
  </div>
</div>



    

    <div id="ajax-error-message" class="ajax-error-message flash flash-error">
      <svg aria-hidden="true" class="octicon octicon-alert" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M8.865 1.52c-.18-.31-.51-.5-.87-.5s-.69.19-.87.5L.275 13.5c-.18.31-.18.69 0 1 .19.31.52.5.87.5h13.7c.36 0 .69-.19.86-.5.17-.31.18-.69.01-1L8.865 1.52zM8.995 13h-2v-2h2v2zm0-3h-2V6h2v4z"></path></svg>
      <button type="button" class="flash-close js-flash-close js-ajax-error-dismiss" aria-label="Dismiss error">
        <svg aria-hidden="true" class="octicon octicon-x" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M7.48 8l3.75 3.75-1.48 1.48L6 9.48l-3.75 3.75-1.48-1.48L4.52 8 .77 4.25l1.48-1.48L6 6.52l3.75-3.75 1.48 1.48z"></path></svg>
      </button>
      You can't perform that action at this time.
    </div>


      
      <script crossorigin="anonymous" src="easyloggingpp_README_files/frameworks-d23e32e482112ba5e3ea9bd8dc7e555680116a74e002746ac9.js"></script>
      <script async="async" crossorigin="anonymous" src="easyloggingpp_README_files/github-6ca6f62765e15635c351212e3512e67fddeee7571f9970e0a78ce7.js"></script>
      
      
      
      
    <div class="js-stale-session-flash stale-session-flash flash flash-warn flash-banner d-none">
      <svg aria-hidden="true" class="octicon octicon-alert" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M8.865 1.52c-.18-.31-.51-.5-.87-.5s-.69.19-.87.5L.275 13.5c-.18.31-.18.69 0 1 .19.31.52.5.87.5h13.7c.36 0 .69-.19.86-.5.17-.31.18-.69.01-1L8.865 1.52zM8.995 13h-2v-2h2v2zm0-3h-2V6h2v4z"></path></svg>
      <span class="signed-in-tab-flash">You signed in with another tab or window. <a href="">Reload</a> to refresh your session.</span>
      <span class="signed-out-tab-flash">You signed out in another tab or window. <a href="">Reload</a> to refresh your session.</span>
    </div>
    <div class="facebox" id="facebox" style="display:none;">
  <div class="facebox-popup">
    <div class="facebox-content" role="dialog" aria-labelledby="facebox-header" aria-describedby="facebox-description">
    </div>
    <button type="button" class="facebox-close js-facebox-close" aria-label="Close modal">
      <svg aria-hidden="true" class="octicon octicon-x" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M7.48 8l3.75 3.75-1.48 1.48L6 9.48l-3.75 3.75-1.48-1.48L4.52 8 .77 4.25l1.48-1.48L6 6.52l3.75-3.75 1.48 1.48z"></path></svg>
    </button>
  </div>
</div>

  


</body></html>